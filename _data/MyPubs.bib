
@inproceedings{bloom_information_2009,
	title = {Information {Leakage} in {Mix} {Networks} with {Randomized} {Partial} {Checking}},
	booktitle = {International {Conference} on {Information} {Security} and {Privacy}},
	author = {Bloom, Gedare and Popoveniuc, Stefan},
	month = jul,
	year = {2009},
}

@inproceedings{leontie_hardware-enforced_2009,
	address = {Chicago, Illinois, USA},
	title = {Hardware-enforced fine-grained isolation of untrusted code},
	isbn = {978-1-60558-782-0},
	url = {http://portal.acm.org/citation.cfm?id=1655077.1655082&coll=Portal&dl=GUIDE&CFID=68319311&CFTOKEN=97545801},
	doi = {10.1145/1655077.1655082},
	abstract = {We present a novel combination of hardware (architecture) and software (compiler) techniques to support the safe execution of untrusted code. While other efforts focus on isolating processes, our approach isolates code and data at a function (as in, C function) level, to enable fine-grained protection within a process as needed for downloaded plugins, libraries, andmodifications of open-source projects. Our solution also enforces timing restrictions to detect denial of service from untrusted code, and supports protection of dynamically allocated memory. Because bookkeeping data can become substantial (permission tables that at their finest granularity describe which memory words may be accessed by which functions), our solution employs a stack-structured bookkeeping mechanism that tracks the flow of execution and automatically dispenses with bookkeeping data when no longer needed. This approach also enables an architectural optimization to handle permissions for dynamically allocated memory, allowing heap blocks to be appropriately shared across the trust boundary. Tested across a suite of benchmarks, our solution had a worst case 12\% overhead and 3.5\% average overhead at the finest level of code granularity (every single function in its own unit of isolation). The overhead is easily reduced by using trace-driven analysis to combine functions into coarser-grained groups that share permissions.},
	urldate = {2009-12-14},
	booktitle = {Proceedings of the first {ACM} workshop on {Secure} execution of untrusted code},
	publisher = {ACM},
	author = {Leontie, Eugen and Bloom, Gedare and Narahari, Bhagirath and Simha, Rahul and Zambreno, Joseph},
	year = {2009},
	keywords = {isolation, memory protection, architectural support for security, fine-grained protection, software security},
	pages = {11--18},
	file = {ACM Snapshot:/home/gedare/Zotero/storage/WESG2SX5/citation.html:text/html},
}

@article{leontie_compiler-hardware_2010,
	title = {A {Compiler}-{Hardware} {Technique} for {Protecting} {Against} {Buffer} {Overflow} {Attacks}},
	volume = {5},
	number = {1},
	journal = {Journal of Information Assurance and Security},
	author = {Leontie, Eugen and Bloom, Gedare and Gelbart, Olga and Narahari, Bhagirath and Simha, Rahul},
	month = feb,
	year = {2010},
	pages = {1--8},
}

@article{bloom_providing_2009,
	title = {Providing secure execution environments with a last line of defense against {Trojan} circuit attacks},
	volume = {28},
	url = {http://dx.doi.org/10.1016/j.cose.2009.03.002},
	doi = {10.1016/j.cose.2009.03.002},
	abstract = {Integrated circuits (ICs) are often produced in foundries that lack effective security controls. In these foundries, sophisticated attackers are able to insert malicious Trojan circuits that are easily hidden in the large, complex circuitry that comprises modern ICs. These so-called Trojan circuits are capable of launching attacks directly in hardware, or, more deviously, can facilitate software attacks. Current defense against Trojan circuits consists of statistical detection techniques to find such circuits before product deployment. The fact that statistical detection can result in false negatives raises the obvious questions: can attacks be detected post-deployment, and is secure execution nonetheless possible using chips with undetected Trojan circuits? In this paper we present the Secure Heartbeat And Dual-Encryption (SHADE) architecture, a compilerâ€“hardware solution for detecting and preventing a subset of Trojan circuit attacks in deployed systems. Two layers of hardware encryption are combined with a heartbeat of off-chip accesses to provide a secure execution environment using untrusted hardware. The SHADE system is designed to complement pre-deployment detection techniques and to add a final, last-chance layer of security. Keywords: Trojan circuit; Dual-encryption; HW/SW co-design; IC trust; Information assurance},
	number = {7},
	urldate = {2009-04-13},
	journal = {Computers \& Security},
	author = {Bloom, Gedare and Narahari, Bhagirath and Simha, Rahul and Zambreno, Joseph},
	month = oct,
	year = {2009},
	keywords = {Dual-encryption, HW/SW co-design, IC trust, Information assurance, Trojan circuit},
	pages = {660--669},
}

@inproceedings{leontie_hardware_2009,
	address = {Los Alamitos, CA, USA},
	title = {Hardware {Containers} for {Software} {Components}: {A} {Trusted} {Platform} for {COTS}-{Based} {Systems}},
	volume = {2},
	isbn = {978-0-7695-3823-5},
	shorttitle = {Hardware {Containers} for {Software} {Components}},
	doi = {http://doi.ieeecomputersociety.org/10.1109/CSE.2009.56},
	abstract = {Much of modern software development consists of assembling together existing software components and writing the glue code that integrates them into a unified application. The term COTS-Based System (CBS) is often used to describe such applications, for which the components assembled are understood to be Commercial-Off-The-Shelf (COTS) components written by a multitude of independent third parties. The manner of assembly in CBS includes full-source components that are integrated at compile-time, pure-binary libraries incorporated at load-time, and plugins that are loaded into the application at execution time by the user.Because components have access to system resources, applications may crash due to faulty components or may be compromised by malicious components. In this paper, we ask the question: can hardware support the development and deployment of CBS by providing applications with a trusted platform for managing components and their interactions?We present an architecture that places each CBS component in a hardware-enforced container. The hardware then detects improper usage of system resources (unauthorized memory accesses or denial-of-service) and enables applications to undertake a hardware-supervised recovery procedure. Furthermore, the hardware also maintains a violation record to enable developers to recreate the violation for the purpose of debugging and further development. Taken together, the purpose of the architecture we propose is to enable executing untrusted CBS code on trusted hardware.},
	booktitle = {Computational {Science} and {Engineering}, {IEEE} {International} {Conference} on},
	publisher = {IEEE Computer Society},
	author = {Leontie, Eugen and Bloom, Gedare and Narahari, Bhagirath and Simha, Rahul and Zambreno, Joseph},
	year = {2009},
	keywords = {isolation, memory protection, architectural support for security, fine-grained protection, software security},
	pages = {830--836},
	file = {Hardware Containers for Software Components\: A Trusted Platform for COTS-Based Systems:/home/gedare/Zotero/storage/SRWIBTT5/CSE.2009.html:text/html},
}

@inproceedings{bloom_os_2009,
	address = {Los Alamitos, CA, USA},
	title = {{OS} support for detecting {Trojan} circuit attacks},
	isbn = {978-1-4244-4805-0},
	doi = {10.1109/HST.2009.5224959},
	abstract = {Rapid advances in integrated circuit (IC) development predicted by Moore's Law lead to increasingly complex, hard to verify IC designs. Design insiders or adversaries employed at untrusted locations can insert malicious Trojan circuits capable of launching attacks in hardware or supporting software-based attacks. In this paper, we provide a method for detecting Trojan circuit denial-of-service attacks using a simple, verifiable hardware guard external to the complex CPU. The operating system produces liveness checks, embedded in the software clock, to which the guard can respond. We also present a novel method for the OS to detect a hardware-software (HW/SW) Trojan privilege escalation attack by using OS-generated checks to test if the CPU hardware is enforcing memory protection (MP). Our implementation of fine-grained periodic checking of MP enforcement incurs only 2.2\% overhead using SPECint 2006.},
	booktitle = {Hardware-{Oriented} {Security} and {Trust}, {IEEE} {International} {Workshop} on},
	publisher = {IEEE Computer Society},
	author = {Bloom, Gedare and Narahari, Bhagirath and Simha, Rahul},
	year = {2009},
	pages = {100--103},
	file = {OS support for detecting Trojan circuit attacks:/home/gedare/Zotero/storage/BIZGJQ88/HST.2009.html:text/html},
}

@inproceedings{bloom_real-time_2010,
	title = {Real-{Time} {Scheduling} with {Hardware} {Data} {Structures}},
	booktitle = {Work-in-{Progress} {Session}. {IEEE} {Real}-{Time} {Systems} {Symposium}},
	author = {Bloom, Gedare and Parmer, Gabriel and Narahari, Bhagirath and Simha, Rahul},
	month = dec,
	year = {2010},
}

@inproceedings{leontie_automation_2011,
	title = {Automation for creating and configuring security manifests for hardware containers},
	isbn = {978-1-4673-0401-6},
	doi = {10.1109/SafeConfig.2011.6111677},
	abstract = {Hardware containers provide fine-grained memory access control to isolate memory regions and sandbox memory references between components of an application. A hardware reference monitor enforces a security manifest of memory access permissions for the currently executing component. In this paper we discuss how automation tools can help software developers to create the security manifest that configures hardware containers. The goal of this work is to foster discussion about our proposals for automation tools: to date we know of no solutions for extracting the metadata (permissions) required for fine-grained memory access control.},
	language = {English},
	booktitle = {2011 4th {Symposium} on {Configuration} {Analytics} and {Automation} ({SAFECONFIG})},
	publisher = {IEEE},
	author = {Leontie, E. and Bloom, G. and Simha, R.},
	month = oct,
	year = {2011},
	keywords = {Monitoring, software, Automation, Hardware, access control, authorisation, software developer, automation tool, Containers, fine-grained memory access control, hardware container, hardware reference monitor, memory access permission, memory region, sandbox memory reference, security manifest, software development management},
	pages = {1--2},
}

@inproceedings{bloom_shared_2012,
	address = {Tampere, Finland},
	series = {{EMSOFT} '12},
	title = {Shared hardware data structures for hard real-time systems},
	isbn = {978-1-4503-1425-1},
	url = {http://doi.acm.org/10.1145/2380356.2380382},
	doi = {10.1145/2380356.2380382},
	abstract = {Hardware support can reduce the time spent operating on data structures by exploiting circuit-level parallelism. Such hardware data structures (HWDSs) can reduce the latency and jitter of data structure operations, which can benefit real-time systems by reducing worst-case execution times (WCETs). For example, a hardware priority queue (HWPQ) can enqueue and dequeue prioritized items in constant time with low variance; the best software implementations are in logarithmic-time asymptotic complexity for at least one of the enqueue or dequeue operations. The main problems with HWDSs are the limited size of hardware and the complexity of sharing it. In this paper we show that software support can help circumvent the size and sharing limitations of hardware so that applications can benefit from a HWDS. We evaluate our work by showing how the choice of software or hardware affects schedulability of task sets that use multiple priority queues of varying sizes. We model task behavior on two applications that are important in real-time and embedded domains: the grey-weighted distance transform for topology mapping and Dijkstra's algorithm for GPS navigation. Our results indicate that HWDSs can reduce the WCET of applications even when a HWDS is shared by multiple data structures or when data structure sizes exceed HWDS size constraints.},
	urldate = {2012-11-24},
	booktitle = {Proceedings of the tenth {ACM} international conference on {Embedded} software},
	publisher = {ACM},
	author = {Bloom, Gedare and Parmer, Gabriel and Narahari, Bhagirath and Simha, Rahul},
	year = {2012},
	keywords = {priority queue, schedulability, hardware data structures},
	pages = {133--142},
}

@phdthesis{bloom_operating_2013,
	title = {Operating {System} {Support} for {Shared} {Hardware} {Data} {Structures}},
	url = {http://gradworks.umi.com/35/46/3546645.html},
	urldate = {2013-12-06},
	school = {The George Washington University},
	author = {Bloom, Gedare},
	month = jan,
	year = {2013},
	keywords = {Computer science Operating System Support for Shared Hardware Data Structures THE GEORGE WASHINGTON UNIVERSITY Bhagirath Narahari, Rahul Simha Bloom, Gedare},
	file = {Snapshot:/home/gedare/Zotero/storage/ADXMGU9X/3546645.html:text/html},
}

@inproceedings{leontie_no_2012,
	title = {No {Principal} {Too} {Small}: {Memory} {Access} {Control} for {Fine}-{Grained} {Protection} {Domains}},
	shorttitle = {No {Principal} {Too} {Small}},
	doi = {10.1109/DSD.2012.89},
	abstract = {Modern programs comprise multiple threads of execution inside a single principal â€“ the process â€“ with a single protection domain, usually a page table. We propose a hardware enforced, fine-grained memory protection mechanism to divide the process into smaller principals and multiple protection domains. Our approach supports modern software engineering better than traditional processes by enabling developers to align software components with protection mechanisms. We implemented our architecture using a cycle-accurate simulator of a complex out-of-order pipeline and evaluate our solution using open-source benchmarks and synthetic micro benchmarks designed specifically to stress our system.},
	booktitle = {2012 15th {Euromicro} {Conference} on {Digital} {System} {Design} ({DSD})},
	author = {Leontie, E. and Bloom, G. and Narahari, B. and Simha, R.},
	year = {2012},
	note = {00002},
	keywords = {software, Context, Software engineering, Pipelines, isolation, memory protection, architectural support for security, fine-grained protection, software security, Permission, Containers, page table, complex out-of-order pipeline, cycle-accurate simulator, fine-grained memory protection mechanism, memory access control, modern software engineering, open-source benchmarks, random-access storage, single protection domain, software components, Switches, synthetic microbenchmarks},
	pages = {163--170},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/Q4P2539D/abs_all.html:text/html;IEEE Xplore Full Text PDF:/home/gedare/Zotero/storage/A655QD73/Leontie et al. - 2012 - No Principal Too Small Memory Access Control for .pdf:application/pdf},
}

@incollection{bloom_chapter_2012,
	address = {Boston},
	title = {Chapter 12 - {Hardware} and {Security}: {Vulnerabilities} and {Solutions}},
	isbn = {978-0-12-415815-3},
	shorttitle = {Chapter 12 - {Hardware} and {Security}},
	url = {http://www.sciencedirect.com/science/article/pii/B9780124158153000121},
	abstract = {This chapter explores cyber-physical system security as it relates to computer hardware. Cyber-physical systems must ensure that physical compromises do not automatically lead to cyber compromises. Attacks on the processor supply chain represent a serious threat to cyber-physical systems â€“ more so than servers and desktops â€“ because critical control systems rely on hardware's trustworthiness, without which catastrophe would result: trains, planes, and automobiles crashing, satellites failing, unmanned robots running amok â€“ think of any real-time or embedded system and you will find a piece of hardware whose correctness and security is assumed implicitly. We discuss supply chain security for the design and fabrication of processor hardware in Section 12.2. Physical compromise of fielded devices offers an attacker with unique opportunities for studying, copying, and corrupting components of a cyber-physical system. If the hardware does not protect itself and its software, then little can be done against a sufficiently motivated and resourceful attack. In Section 12.3, we examine how hardware helps make software secure and consider in particular the challenging aspects of computer security for devices that are not physically secured.

Keywords: Trojan circuit, design for hardware trust, memory protection, control flow integrity, secure coprocessing, encrypted execution, and data.},
	urldate = {2012-02-15},
	booktitle = {Handbook on {Securing} {Cyber}-{Physical} {Critical} {Infrastructure}},
	publisher = {Morgan Kaufmann},
	author = {Bloom, Gedare and Leontie, Eugen and Narahari, Bhagirath and Simha, Rahul},
	year = {2012},
	note = {00000},
	pages = {305--331},
	file = {ScienceDirect Snapshot:/home/gedare/Zotero/storage/75JDDEFA/Bloom et al. - 2012 - Chapter 12 - Hardware and Security Vulnerabilitie.html:text/html},
}

@inproceedings{leontie_hardware_2013,
	address = {New York, NY, USA},
	series = {{SPLASH} '13},
	title = {Hardware and {Software} {Support} for {Fine}-grained {Memory} {Access} {Control} and {Encapsulation} in {C}++},
	isbn = {978-1-4503-1995-9},
	url = {http://doi.acm.org/10.1145/2508075.2508091},
	doi = {10.1145/2508075.2508091},
	urldate = {2015-06-15},
	booktitle = {Proceedings of the 2013 {Companion} {Publication} for {Conference} on {Systems}, {Programming}, \& {Applications}: {Software} for {Humanity}},
	publisher = {ACM},
	author = {Leontie, Eugen and Bloom, Gedare and Simha, Rahul},
	year = {2013},
	keywords = {encapsulation, hardware containers},
	pages = {81--82},
}

@inproceedings{cederman_rtems_2014,
	address = {Warsaw, Poland},
	title = {{RTEMS} {SMP} for {LEON3}/{LEON4} {Multi}-{Processor} {Devices}},
	booktitle = {Data {Systems} {In} {Aerospace}},
	author = {Cederman, Daniel and HellstrÃ¶m, Daniel and Sherrill, Joel and Bloom, Gedare and Patte, Mathieu and Zulianello, Marco},
	month = jun,
	year = {2014},
}

@inproceedings{smith_pylom:_2013,
	address = {New York, NY, USA},
	series = {{SPLASH} '13},
	title = {{PyLOM}: {A} {Language} and {Run}-time {System} for {Planning} {Applications}},
	isbn = {978-1-4503-1995-9},
	shorttitle = {{PyLOM}},
	url = {http://doi.acm.org/10.1145/2508075.2522608},
	doi = {10.1145/2508075.2522608},
	abstract = {Controlling software systems autonomously has been a challenging research area. Modern autonomous systems are guided by a plan, which is a sequence of actions to take to achieve a goal. Many planning algorithms exist today to produce plans given a problem definition and goal. To ease programmability of autonomous systems, many languages have been developed for defining problems and goals. However, planning algorithms tend to need to be customized not only for the problem definition language, but also for the problem definition itself. This work presents a new problem definition language called PyLOM, an interpreted, object-oriented language. The PyLOM run-time system uses generic algorithms, which do not need to be customized for each problem definition. Thus, PyLOM separates problem definitions from planning algorithms to ease programmability and software reuse. The choice of an object-oriented language also is intended to aid programmability, since prior problem definition languages adopt a functional programming style.},
	urldate = {2014-10-21},
	booktitle = {Proceedings of the 2013 {Companion} {Publication} for {Conference} on {Systems}, {Programming}, \&\#38; {Applications}: {Software} for {Humanity}},
	publisher = {ACM},
	author = {Smith, Scotty and Bloom, Gedare and Simha, Rahul},
	year = {2013},
	keywords = {planning, pylom},
	pages = {91--92},
}

@article{bloom_scheduling_2014,
	title = {Scheduling and {Thread} {Management} with {RTEMS}},
	volume = {11},
	issn = {1551-3688},
	url = {http://doi.acm.org/10.1145/2597457.2597459},
	doi = {10.1145/2597457.2597459},
	abstract = {The goal of a real-time operating system (RTOS) is to support real-time and embedded system (RT/ES) application development, which differ from general-purpose applications because of the size, weight, and power (SWaP) and timing constraints imposed by embedded applications. Useful RTOS features include real-time thread scheduling, thread communication, synchronization, interrupt handling, memory management, file systems, device drivers, networking, and debugging support. The Real-Time Executive for Multi-processor Systems (RTEMS) is a free and open-source RTOS that supports over a dozen processor architecture families and over 150 embedded system boards. RTEMS is designed to support embedded applications with stringent real-time requirements while being compatible with open standards such as POSIX. RTEMS includes optional services such as TCP/IP networking and file systems while still offering minimum executable sizes under 20 KB in useful configurations. One of the primary functions of an RTOS is to select threads that can obtain access to resources such as shared memory and processor time. RTEMS uses multiple algorithms to manage both waiting threads and those ready to execute. The thread execution schedulers include the traditional RTOS round robin and deterministic priority schedulers, rate monotonic, earliest deadline first (EDF), constant bandwidth server (CBS), and simple SMP scheduling algorithms. The RTEMS scheduling framework allows the application developer to select the thread scheduling algorithm that best meets the application's space and time requirements. Ã‚ÄƒWe will present how this framework can be used by researchers to integrate their own scheduling algorithm into RTEMS and test it using a scheduling simulator before deploying it on target hardware.},
	number = {1},
	urldate = {2014-10-21},
	journal = {SIGBED Rev.},
	author = {Bloom, Gedare and Sherrill, Joel},
	month = feb,
	year = {2014},
	keywords = {scheduling, RTEMS},
	pages = {20--25},
	file = {ACM Full Text PDF:/home/gedare/Zotero/storage/GV58GCD2/Bloom and Sherrill - 2014 - Scheduling and Thread Management with RTEMS.pdf:application/pdf},
}

@inproceedings{bloom_hardware-enhanced_2014,
	address = {New York, NY, USA},
	series = {{SACMAT} '14},
	title = {Hardware-enhanced {Distributed} {Access} {Enforcement} for {Role}-based {Access} {Control}},
	isbn = {978-1-4503-2939-2},
	url = {http://doi.acm.org/10.1145/2613087.2613096},
	doi = {10.1145/2613087.2613096},
	abstract = {The protection of information in enterprise and cloud platforms is growing more important and complex with increasing numbers of users who need to access resources with distinct permissions. Role-based access control (RBAC) eases administrative complexity for large-scale access control, while a client-server model can ease performance bottlenecks by distributing access enforcement across multiple servers that consult the centralized access decision policy server as needed. In this paper, we propose a new approach to access enforcement using an existing associative array hardware data structure (HWDS) to cache authorizations in a distributed system using RBAC. This HWDS approach uses hardware that has previous been demonstrated as useful for several application domains including access control, network packet routing, and generic comparison-based integer search algorithms. We reproduce experiments from prior work on distributed access enforcement for RBAC systems, and we design and conduct new experiments to evaluate HWDS-based access enforcement. Experimental data show the HWDS cuts session initiation time by about a third compared to existing solutions, while achieving similar performance to authorize access requests. These results suggest that distributed systems using RBAC could use HWDS-based access enforcement to increase session throughput or to decrease the number of access enforcement servers without losing performance.},
	urldate = {2014-10-10},
	booktitle = {Proceedings of the 19th {ACM} {Symposium} on {Access} {Control} {Models} and {Technologies}},
	publisher = {ACM},
	author = {Bloom, Gedare and Simha, Rahul},
	year = {2014},
	keywords = {access control, hardware data structures, enforcement},
	pages = {5--16},
}

@inproceedings{felbinger_test_2015,
	address = {Graz, Austria},
	title = {Test {Suite} {Coverage} {Measurement} and {Reporting} for {Testing} an {Operating} {System} without {Instrumentation}},
	booktitle = {17th {Real} {Time} {Linux} {Workshop}},
	author = {Felbinger, Hermann and Sherrill, Joel and Bloom, Gedare and Wotawa, Franz},
	month = oct,
	year = {2015},
}

@inproceedings{gadia_verifying_2016,
	title = {Verifying {Nested} {Lock} {Priority} {Inheritance} in {RTEMS} with {Java} {Pathfinder}},
	url = {https://link.springer.com/chapter/10.1007/978-3-319-47846-3_26},
	doi = {10.1007/978-3-319-47846-3_26},
	abstract = {Scheduling and synchronization algorithms for uniprocessor real-time systems benefit from the rich theory of schedulability analysis, and yet translating these algorithms to practical implementations can be challenging. This paper presents a Java model of the priority inheritance protocol for mutual exclusion, as implemented in the RTEMS open-source real-time operating system. We verified this model using Java Pathfinder to detect potential data races, deadlocks, and priority inversions. JPF detected a known bug in the RTEMS implementation, which we modified along with the Java model. Verification of the modified model showed the absence of data races, deadlocks, and established nine protocol-specific correctness properties.},
	language = {en},
	urldate = {2017-02-23},
	booktitle = {Formal {Methods} and {Software} {Engineering}},
	publisher = {Springer, Cham},
	author = {Gadia, Saurabh and Artho, Cyrille and Bloom, Gedare},
	month = nov,
	year = {2016},
	pages = {417--432},
	file = {Snapshot:/home/gedare/Zotero/storage/HRBHQQZK/978-3-319-47846-3_26.html:text/html},
}

@inproceedings{song_superglue:_2016,
	title = {{SuperGlue}: {IDL}-{Based}, {System}-{Level} {Fault} {Tolerance} for {Embedded} {Systems}},
	shorttitle = {{SuperGlue}},
	doi = {10.1109/DSN.2016.29},
	abstract = {As the processor feature sizes shrink, mitigating faults in low level system services has become a critical aspect of dependable system design. In this paper we introduce SuperGlue, an interface description language (IDL) and compiler for recovery from transient faults in a component-based operating system. SuperGlue generates code for interface-driven recovery that uses commodity hardware isolation, micro-rebooting, and interface-directed fault recovery to provide predictable and efficient recovery from faults that impact low-level system services. SuperGlue decreases the amount of recovery code system designers need to implement by an order of magnitude, and replaces it with declarative specifications. We evaluate SuperGlue with a fault injection campaign in low-level system components (e.g., memory mapping manager and scheduler). Additionally, we evaluate the performance of SuperGlue in a web-server application. Results show that SuperGlue improves system reliability with only a small performance degradation of 11.84\%.},
	booktitle = {2016 46th {Annual} {IEEE}/{IFIP} {International} {Conference} on {Dependable} {Systems} and {Networks} ({DSN})},
	author = {Song, J. and Bloom, G. and Parmer, G.},
	month = jun,
	year = {2016},
	keywords = {fault tolerance, software fault tolerance, Hardware, servers, transient analysis, embedded systems, program compilers, object-oriented programming, code generation, instruction sets, operating systems (computers), commodity hardware isolation, component-based operating system, dependable system design, fault injection campaign, fault mitigation, Fault tolerant systems, IDL-based system-level fault tolerance, interface description language, interface-directed fault recovery, interface-driven recovery, low-level system services, microrebooting, recovery code system, specification languages, SuperGlue, system reliability, transient faults, Web-server application},
	pages = {227--238},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/GA7FHBEX/7579744.html:text/html},
}

@inproceedings{bloom_fab_2010,
	address = {Waltham, MA},
	title = {Fab {Forensics}: {Increasing} {Trust} in {IC} {Fabrication}},
	booktitle = {2010 {IEEE} {International} {Conference} on {Technologies} for {Homeland} {Security}},
	author = {Bloom, Gedare and Narahari, Bhagirath and Simha, Rahul},
	month = nov,
	year = {2010},
}

@inproceedings{bloom_fpga_2015,
	title = {{FPGA} {SoC} architecture and runtime to prevent hardware {Trojans} from leaking secrets},
	doi = {10.1109/HST.2015.7140235},
	abstract = {Hardware Trojans compromise security by invalidating the assumption that hardware provides a root-of-trust for secure systems. We propose a novel approach for an FPGA system-on-chip (SoC) to ensure confidentiality of trusted software despite hardware Trojan attacks. Our approach employs defensive techniques that feature morphing on-chip resources for moving target defense against fabrication-time Trojans, onion-encryption for confidentiality, and replication of functionally-equivalent variants of processing elements with arbitrated voting for resilience to design-time Trojans. These techniques are enabled by partial runtime reconfiguration (PRR) and are managed by a hardware abstraction layer (HAL) that reduces developer burden. We call our approach the Morph Onion-encryption Replication PRR HAL, or MORPH. MORPH aims to provide a stable interface for embedded systems developers to use in deploying applications that are resilient to hardware Trojans.},
	booktitle = {2015 {IEEE} {International} {Symposium} on {Hardware} {Oriented} {Security} and {Trust} ({HOST})},
	author = {Bloom, G. and Narahari, B. and Simha, R. and Namazi, A. and Levy, R.},
	month = may,
	year = {2015},
	keywords = {cryptography, Hardware, trusted computing, IP networks, system-on-chip, embedded systems, Trojan horses, Field programmable gate arrays, hardware Trojans, secure systems, Partial Runtime reconfiguration, arbitrated voting, design-time Trojans, embedded systems developers, fabrication-time trojans, FPGA SoC architecture, HAL, hardware abstraction layer, MORPH, morph onion-encryption replication PRR HAL, on-chip resource morphing, PRR, root-of-trust, secret leaking, trusted software},
	pages = {48--51},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/4493FBFT/login.html:text/html},
}

@inproceedings{bloom_lockdown:_2016,
	address = {New York, NY, USA},
	series = {{EuroSec} '16},
	title = {{LockDown}: {An} {Operating} {System} for {Achieving} {Service} {Continuity} by {Quarantining} {Principals}},
	isbn = {978-1-4503-4295-7},
	shorttitle = {{LockDown}},
	url = {http://doi.acm.org/10.1145/2905760.2905764},
	doi = {10.1145/2905760.2905764},
	abstract = {This paper introduces quarantine, a new security primitive for an operating system to use in order to protect information and isolate malicious behavior. Quarantine's core feature is the ability to fork a protection domain on-the-fly to isolate a specific principal's execution of untrusted code without risk of a compromise spreading. Forking enables the OS to ensure service continuity by permitting even high-risk operations to proceed, albeit subject to greater scrutiny and constraints. Quarantine even partitions executing threads that share resources into isolated protection domains. We discuss the design and implementation of quarantine within the LockDown OS, a security-focused evolution of the Composite component-based microkernel OS. Initial performance results for quarantine show that about 98\% of the overhead comes from the cost of copying memory to the new protection domain.},
	urldate = {2016-08-08},
	booktitle = {Proceedings of the 9th {European} {Workshop} on {System} {Security}},
	publisher = {ACM},
	author = {Bloom, Gedare and Parmer, Gabriel and Simha, Rahul},
	year = {2016},
	keywords = {protection, access control, confinement, microkernel},
	pages = {7:1--7:6},
}

@inproceedings{ren_cbufs:_2016,
	address = {New York, NY, USA},
	series = {{ISMM} 2016},
	title = {{CBufs}: {Efficient}, {System}-wide {Memory} {Management} and {Sharing}},
	isbn = {978-1-4503-4317-6},
	shorttitle = {{CBufs}},
	url = {http://doi.acm.org/10.1145/2926697.2926703},
	doi = {10.1145/2926697.2926703},
	abstract = {Modern systems are composed of many different protection domains separating privilege levels, subsystems, users, clients, and software of differing levels of assurance. System-wide memory management must consider not only allocation to single processes, but also efficient sharing of data across protection domains, and the allocation of memory based on the performance of applications that span multiple protection domains. This paper introduces the CBuf system for the global management of virtual and physical memory, including zero-copy sharing between protection domains. We present the design and implementation of both garbage collection techniques to enable efficient sharing, and policies that balance memory between protection domains specifically to satisfy system and application constraints such as quality of service. We show that a CBuf-enabled webserver achieves over a factor of 2.5 throughput speedup while using less processing time than Apache on Linux, and that the system can intentionally control system throughput through intelligent memory allocation.},
	urldate = {2016-08-08},
	booktitle = {Proceedings of the 2016 {ACM} {SIGPLAN} {International} {Symposium} on {Memory} {Management}},
	publisher = {ACM},
	author = {Ren, Yuxin and Parmer, Gabriel and Georgiev, Teo and Bloom, Gedare},
	year = {2016},
	keywords = {memory management, shared memory, garbage collection, zero-copy},
	pages = {68--77},
}

@inproceedings{cederman_rtems_2015,
	address = {Barcelona, Spain},
	title = {{RTEMS} {SMP} and {MTAPI} for {Efficient} {Multi}-{Core} {Space} {Applications} on {LEON3}/{LEON4} {Processors}},
	booktitle = {Data {Systems} {In} {Aerospace}},
	author = {Cederman, Daniel and HellstrÃ¶m, Daniel and Sherrill, Joel and Bloom, Gedare and Patte, Mathieu and Zulianello, Marco},
	month = may,
	year = {2015},
}

@article{bloom_aligning_2018,
	title = {Aligning {Deos} and {RTEMS} with the {FACE} {Safety} {Base} {Operating} {System} {Profile}},
	volume = {15},
	issn = {1551-3688},
	url = {http://doi.acm.org/10.1145/3199610.3199612},
	doi = {10.1145/3199610.3199612},
	number = {1},
	journal = {SIGBED Rev.},
	author = {Bloom, Gedare and Sherrill, Joel and Gilliland, Gary},
	month = mar,
	year = {2018},
	keywords = {POSIX, paravirtualization, avionics, RTEMS, Deos, FACE},
	pages = {15--21},
}

@inproceedings{bloom_optimized_2017,
	title = {Optimized event notification in {CAN} through in-frame replies and {Bloom} filters},
	doi = {10.1109/WFCS.2017.7991963},
	abstract = {Thanks to its distributed and asynchronous medium access control mechanism, CAN is the ideal choice for interconnecting devices in event-driven systems. When timing requirements of applications are not particularly demanding, as in the case of, e.g., reactive and proactive maintenance, constraints on event delivery can be relaxed, so that their notification may rely on best-effort approaches. In this paper, a number of techniques are taken into account for notifying events in such a kind of systems, and their performance has been evaluated. Besides conventional CAN, a recent proposal for extending this protocol, termed CAN XR, is considered. Moreover, the adoption of Bloom filters to cope with rare events in very large systems has also been evaluated.},
	booktitle = {2017 {IEEE} 13th {International} {Workshop} on {Factory} {Communication} {Systems} ({WFCS})},
	author = {Bloom, G. and Cena, G. and Bertolotti, I. C. and Hu, T. and Valenzano, A.},
	month = may,
	year = {2017},
	keywords = {data structures, controller area networks, Payloads, Electronic mail, access protocols, Real-time systems, asynchronous medium access control mechanism, Bloom filters, CAN XR, distributed medium access control mechanism, event-driven systems, in-frame replies, Media Access Protocol, optimized event notification, Proposals, protocol, Timing},
	pages = {1--10},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/8WJFWTAG/7991963.html:text/html},
}

@inproceedings{bloom_supporting_2017,
	title = {Supporting security protocols on {CAN}-based networks},
	doi = {10.1109/ICIT.2017.7915557},
	abstract = {The ever-increasing variety of services built on top of the Controller Area Network (CAN), along with the recent discovery of vulnerabilities in CAN-based automotive systems (some of them demonstrated in practice), stimulated a renewed attention to security-oriented enhancements of the CAN protocol. The issue is further compounded nowadays because, unlike in the past, security can no longer be enforced by physical bus segregation. This paper describes how CAN XR, a recently proposed extension of the CAN data-link layer, can effectively support the distributed calculation of arbitrary binary Boolean functions, which are the foundation of most security protocols, without necessarily disclosing their operands on the bus. The feasibility of the approach is then shown through experimental evaluation and by confirming its applicability to a shared key generation protocol proposed in literature.},
	booktitle = {2017 {IEEE} {International} {Conference} on {Industrial} {Technology} ({ICIT})},
	author = {Bloom, G. and Cena, G. and Bertolotti, I. C. and Hu, T. and Valenzano, A.},
	month = mar,
	year = {2017},
	keywords = {computer network security, Boolean functions, security protocols, Security, cryptographic protocols, controller area networks, Payloads, Electronic mail, Protocols, Network security, Cryptographic protocols, Standards, CAN XR, arbitrary binary Boolean functions, CAN data-link layer, CAN protocol security-oriented enhancements, CAN-based automotive systems, CAN-based networks, controller area network, Controller area network (CAN), Observers, physical bus segregation, shared key generation protocol},
	pages = {1334--1339},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/3LUP77HF/7915557.html:text/html},
}

@inproceedings{young_towards_2016,
	title = {Towards a {Fail}-{Operational} {Intrusion} {Detection} {System} for {In}-{Vehicle} {Networks}},
	abstract = {The landscape of automotive in-vehicle networks is changing driven by the vast options for infotainment features and progress toward fully-autonomous vehicles. However, the security of automotive networks is lagging behind feature-driven technologies, and new vulnerabilities are constantly being discovered. In this paper, we introduce a road map towards a security solution for in-vehicle networks that can detect anomalous and failed states of the network and adaptively respond in real-time to maintain a fail-operational system.},
	booktitle = {Proceedings of the {Workshop} on {Security} and {Dependability} of {Critical} {Embedded} {Real}-{Time} {Systems} ({CERTS})},
	author = {Young, Clinton and Zambreno, Joseph and Bloom, Gedare},
	month = nov,
	year = {2016},
	keywords = {automotive security},
}

@inproceedings{nwafor_anomaly-based_2018,
	address = {Orlando, Florida, USA},
	title = {Anomaly-based {Intrusion} {Detection} of {IoT} {Device} {Sensor} {Data} using {Provenance} {Graphs}},
	booktitle = {1st {International} {Workshop} on {Security} and {Privacy} for the {Internet}-of-{Things}},
	author = {Nwafor, Ebelechukwu and Campbell, Andre and Bloom, Gedare},
	month = apr,
	year = {2018},
}

@inproceedings{armbrust_spatial_2014,
	title = {On {Spatial} {Isolation} for {Mixed} {Criticality}, {Embedded} {Systems}},
	booktitle = {Proc. 2nd {Workshop} on {Mixed} {Criticality} {Systems} ({WMC}), {RTSS}},
	author = {Armbrust, Eric and Song, Jiguo and Bloom, Gedare and Parmer, Gabriel},
	year = {2014},
	pages = {15--20},
}

@inproceedings{marshall_n-modular_2016,
	title = {n-{Modular} {Redundant} {Real}-{Time} {Middleware}: {Design} and {Implementation}},
	booktitle = {{EWiLi} 2016},
	author = {Marshall, James and Parmer, Gabriel and Simha, Rahul and Bloom, Gedare},
	year = {2016},
}

@inproceedings{nwafor_towards_2017,
	title = {Towards a provenance collection framework for {Internet} of {Things} devices},
	doi = {10.1109/UIC-ATC.2017.8397531},
	abstract = {The Internet of Things (IoT) offers immense benefits by enabling devices to leverage networked resources thereby making intelligent decisions. The numerous heterogeneous connected devices that exist throughout the IoT system creates new security and privacy concerns. Some of these concerns can be overcome through trust, transparency, and integrity, which can be achieved with data provenance. Data provenance, also known as data lineage, provides a history of transformations that occurs on a data object from the time it was created to its current state. Data provenance has been explored in the areas of scientific computing, business, forensic analysis, and intrusion detection. Data provenance can help in detecting and mitigating malicious cyber attacks. In this paper, we explore the integration of provenance within the IoT. We introduce Provenance Aware Internet of Things System (PAIoTS), a provenance collection framework for IoT devices. We evaluate the effectiveness of our framework by developing a prototype system for proof of concept.},
	booktitle = {2017 {IEEE} {SmartWorld}, {Ubiquitous} {Intelligence} {Computing}, {Advanced} {Trusted} {Computed}, {Scalable} {Computing} {Communications}, {Cloud} {Big} {Data} {Computing}, {Internet} of {People} and {Smart} {City} {Innovation} ({SmartWorld}/{SCALCOM}/{UIC}/{ATC}/{CBDCom}/{IOP}/{SCI})},
	author = {Nwafor, E. and Campbell, A. and Hill, D. and Bloom, G.},
	month = aug,
	year = {2017},
	keywords = {Computational modeling, Internet of Things, Security, Data models, Temperature sensors, History, Cloud computing},
	pages = {1--6},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/U2RIM25L/8397531.html:text/html},
}

@inproceedings{bloom_design_2018,
	title = {Design patterns for the industrial {Internet} of {Things}},
	doi = {10.1109/WFCS.2018.8402353},
	abstract = {The Internet of Things (IoT) is a vast collection of interconnected sensors, devices, and services that share data and information over the Internet with the objective of leveraging multiple information sources to optimize related systems. The technologies associated with the IoT have significantly improved the quality of many existing applications by reducing costs, improving functionality, increasing access to resources, and enhancing automation. The adoption of IoT by industries has led to the next industrial revolution: Industry 4.0. The rise of the Industrial IoT (IIoT) promises to enhance factory management, process optimization, worker safety, and more. However, the rollout of the IIoT is not without significant issues, and many of these act as major barriers that prevent fully achieving the vision of Industry 4.0. One major area of concern is the security and privacy of the massive datasets that are captured and stored, which may leak information about intellectual property, trade secrets, and other competitive knowledge. As a way forward toward solving security and privacy concerns, we aim in this paper to identify common input-output (I/O) design patterns that exist in applications of the IIoT. These design patterns enable constructing an abstract model representation of data flow semantics used by such applications, and therefore better understand how to secure the information related to IIoT operations. In this paper, we describe communication protocols and identify common I/O design patterns for IIoT applications with an emphasis on data flow in edge devices, which, in the industrial control system (ICS) setting, are most often involved in process control or monitoring.},
	booktitle = {2018 14th {IEEE} {International} {Workshop} on {Factory} {Communication} {Systems} ({WFCS})},
	author = {Bloom, G. and Alsulami, B. and Nwafor, E. and Bertolotti, I. C.},
	month = jun,
	year = {2018},
	keywords = {Internet of Things, Security, IIoT, Industry 4.0, Sensors, Cloud computing, Wireless sensor networks, Design Patterns, Industrial Internet of Things, Industries},
	pages = {1--10},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/365NH2CQ/8402353.html:text/html},
}

@inproceedings{tessler_work--progress:_2017,
	title = {Work-in-{Progress}: {Reducing} {Cache} {Conflicts} via {Interrupts} and {BUNDLE} {Scheduling}},
	shorttitle = {Work-in-{Progress}},
	doi = {10.1109/RTAS.2017.30},
	abstract = {In "BUNDLE: Real-Time Multi-Threaded Scheduling to Reduce Cache Contention" Tessler and Fisher present a positive perspective of instruction caches for hard real-time multithreaded tasks. The thread-aware scheduling algorithm limits the execution of threads to sets of instructions that cannot result in cache conflicts. Identification of these sets result in conflict free regions which are used to identify scheduling groups called bundles in the BUNDLE scheduling algorithm. Placement of a thread in a particular bundle depends on, what the authors call, "anticipating execution". However, they do not define a complete mechanism to anticipate execution. In this work, we propose a method to anticipate execution that modifies cache hardware and introduces a new interrupt raised prior to a cache conflict. This new interrupt is combined with (a slightly modified version of) the BUNDLE scheduling algorithm. The intent is to implement these hardware modifications for ARM on the gem5 simulator with the scheduling algorithm integrated into the RTEMS operating system. The hope is this work serves as further motivation to bring the positive perspective of caches to physical processors and operating systems.},
	booktitle = {2017 {IEEE} {Real}-{Time} and {Embedded} {Technology} and {Applications} {Symposium} ({RTAS})},
	author = {Tessler, C. and Bloom, G. and Fisher, N.},
	month = apr,
	year = {2017},
	keywords = {Hardware, Indexes, cache storage, multi-threading, operating system kernels, scheduling, Registers, interrupts, ARM, Scheduling algorithms, anticipating execution, BUNDLE scheduling, cache conflict reduction, cache contention reduction, Cache memory, Cache Memory, gem5 simulator, hardware modifications, instruction caches, Instruction sets, Multithreading, physical processors, real-time multi-threaded scheduling, real-time multithreaded tasks, RTEMS operating system, Static Analysis, thread-aware scheduling algorithm},
	pages = {125--128},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/YMESM2TK/7939026.html:text/html},
}

@inproceedings{mohan_special_2018,
	title = {Special {Session}: {The} {Future} of {IoT} {Security}},
	shorttitle = {Special {Session}},
	doi = {10.1109/EMSOFT.2018.8537206},
	abstract = {The Internet-of-Things (IoT) is a large and complex domain. These systems are often constructed using a very diverse set of hardware, software and protocols. This, combined with the ever increasing number of IoT solutions/services that are rushed to market means that most such systems are rife with security holes. Recent incidents (e.g., the Mirai botnet) further highlight such security issues. With emerging technologies such as blockchain and software-defined networks (SDNs), new security solutions are possible in the IoT domain. In this paper we will explore future trends in IoT security: (a) the use of blockchains in IoT security, (b) data provenance for sensor information, (c) reliable and secure transport mechanisms using SDNs (d) scalable authentication and remote attestation mechanisms for IoT devices and (e) threat modeling and risk/maturity assessment frameworks for the domain.},
	booktitle = {2018 {International} {Conference} on {Embedded} {Software} ({EMSOFT})},
	author = {Mohan, S. and Asplund, M. and Bloom, G. and Sadeghi, A. and Ibrahim, A. and Salajageh, N. and Griffioen, P. and Sinipoli, B.},
	month = sep,
	year = {2018},
	keywords = {data integrity, sensor fusion, Resilience, message authentication, Internet of Things, security solutions, data provenance, Cryptography, Software, IoT domain, IoT devices, Reliability, IoT security, authentication mechanism, IoT solutions/services, Quality of service, remote attestation mechanism, sensor information, transport mechanisms},
	pages = {1--7},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/78EX8FPP/8537206.html:text/html},
}

@incollection{olufowobi_chapter_2019,
	title = {Chapter 16 - {Connected} {Cars}: {Automotive} {Cybersecurity} and {Privacy} for {Smart} {Cities}},
	isbn = {978-0-12-815032-0},
	shorttitle = {Chapter 16 - {Connected} {Cars}},
	url = {http://www.sciencedirect.com/science/article/pii/B9780128150320000160},
	abstract = {This chapter examines the cybersecurity and privacy of the twin notions of smart transportation and intelligent transportation systems with a focus on the role of personal automobiles. Smart transportation encompasses the individual and joint capabilities of connected cars, or more generally, vehicles, and so comprises the internal workings of autonomous vehicles and the complex interdependencies introduced by vehicle-to-vehicle communications. An intelligent transportation system introduces smart technology to civil transportation infrastructure, and the connected car further creates the opportunity for vehicle-to-infrastructure communications. We identify threats and attacks enabled by smart transportation and intelligent transportation systems, and survey methods for providing security and privacy.},
	urldate = {2019-03-05},
	booktitle = {Smart {Cities} {Cybersecurity} and {Privacy}},
	publisher = {Elsevier},
	author = {Olufowobi, Habeeb and Bloom, Gedare},
	editor = {Rawat, Danda B. and Ghafoor, Kayhan Zrar},
	month = jan,
	year = {2019},
	doi = {10.1016/B978-0-12-815032-0.00016-0},
	keywords = {Cybersecurity, Connected cars, Intelligent transportation system, Smart transportation, V2I, V2V, automotive security},
	pages = {227--240},
	file = {ScienceDirect Snapshot:/home/gedare/Zotero/storage/73JSMDMG/B9780128150320000160.html:text/html},
}

@inproceedings{young_automotive_2019,
	address = {New York, NY, USA},
	series = {{AutoSec} '19},
	title = {Automotive {Intrusion} {Detection} {Based} on {Constant} {CAN} {Message} {Frequencies} {Across} {Vehicle} {Driving} {Modes}},
	isbn = {978-1-4503-6180-4},
	url = {http://doi.acm.org/10.1145/3309171.3309179},
	doi = {10.1145/3309171.3309179},
	abstract = {The modern automobile relies on numerous electronic control units communicating over the de facto standard of the controller area network (CAN) bus. This communication network was not developed with cybersecurity in mind. Many methods based on constant time intervals between messages have been proposed to address this lack of security issue with the CAN bus. However, these existing methods may struggle to handle variable time intervals between messages during transitions of vehicle driving modes. This paper proposes a simple and cost-effective method to ensure the security of the CAN bus that is based on constant message frequencies across vehicle driving modes. This proposed method does not require any modifications on the existing CAN bus and it is designed with the intent for efficient execution in platforms with very limited computational resources. Test results with the proposed method against two different vehicles and a frequency domain analysis are also presented in the paper.},
	urldate = {2019-03-28},
	booktitle = {Proceedings of the {ACM} {Workshop} on {Automotive} {Cybersecurity}},
	publisher = {ACM},
	author = {Young, Clinton and Olufowobi, Habeeb and Bloom, Gedare and Zambreno, Joseph},
	year = {2019},
	note = {event-place: Richardson, Texas, USA},
	keywords = {controller area network, automotive anomaly detection, frequency detection, automotive security},
	pages = {9--14},
	file = {ACM Full Text PDF:/home/gedare/Zotero/storage/NCUSK5WS/Young et al. - 2019 - Automotive Intrusion Detection Based on Constant C.pdf:application/pdf},
}

@inproceedings{olufowobi_anomaly_2019,
	address = {New York, NY, USA},
	series = {{AutoSec} '19},
	title = {Anomaly {Detection} {Approach} {Using} {Adaptive} {Cumulative} {Sum} {Algorithm} for {Controller} {Area} {Network}},
	isbn = {978-1-4503-6180-4},
	url = {http://doi.acm.org/10.1145/3309171.3309178},
	doi = {10.1145/3309171.3309178},
	abstract = {The modern vehicle has transformed from a purely mechanical system to a system that embeds several electronic devices. These devices communicate through the in-vehicle network for enhanced safety and comfort but are vulnerable to cyber-physical risks and attacks. A well-known technique of detecting these attacks and unusual events is by using intrusion detection systems. Anomalies in the network occur at unknown points and produce abrupt changes in the statistical features of the message stream. In this paper, we propose an anomaly-based intrusion detection approach using the cumulative sum (CUSUM) change-point detection algorithm to detect data injection attacks on the controller area network (CAN) bus. We leverage the parameters required for the change-point algorithm to reduce false alarm rate and detection delay. Using real dataset generated from a car in normal operation, we evaluate our detection approach on three different kinds of attack scenarios.},
	urldate = {2019-03-28},
	booktitle = {Proceedings of the {ACM} {Workshop} on {Automotive} {Cybersecurity}},
	publisher = {ACM},
	author = {Olufowobi, Habeeb and Ezeobi, Uchenna and Muhati, Eric and Robinson, Gaylon and Young, Clinton and Zambreno, Joseph and Bloom, Gedare},
	year = {2019},
	note = {event-place: Richardson, Texas, USA},
	keywords = {intrusion detection, can, change-point detection, cusum, data injection, sequential methods, automotive security},
	pages = {25--30},
	file = {ACM Full Text PDF:/home/gedare/Zotero/storage/WTLT7SEZ/Olufowobi et al. - 2019 - Anomaly Detection Approach Using Adaptive Cumulati.pdf:application/pdf},
}

@inproceedings{olufowobi_work--progress:_2018,
	title = {Work-in-{Progress}: {Real}-{Time} {Modeling} for {Intrusion} {Detection} in {Automotive} {Controller} {Area} {Network}},
	shorttitle = {Work-in-{Progress}},
	doi = {10.1109/RTSS.2018.00030},
	abstract = {Security of vehicular networks has often been an afterthought since they are designed traditionally to be a closed system. An attack could lead to catastrophic effect which may include loss of human life or severe injury to the driver and passengers of the vehicle. In this paper, we propose a novel algorithm to extract the real-time model of the controller area network (CAN) and develop a specification-based intrusion detection system (IDS) using anomaly-based supervised learning with the real-time model as input. We evaluate IDS performance with real CAN logs collected from a sedan car.},
	booktitle = {2018 {IEEE} {Real}-{Time} {Systems} {Symposium} ({RTSS})},
	author = {Olufowobi, H. and Bloom, G. and Young, C. and Zambreno, J.},
	month = dec,
	year = {2018},
	keywords = {security of data, Classification algorithms, Computational modeling, Jitter, automobiles, Delays, controller area networks, CAN, Real-time systems, Time factors, anomaly-based supervised learning, automotive controller area network, Intrusion Detection, real-time modeling, Response Time Analysis, sedan car, specification-based intrusion detection system, supervised learning, Timing Model, traffic information systems, vehicular network security, automotive security},
	pages = {161--164},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/98YMS25J/8603206.html:text/html},
}

@inproceedings{nasri_pitfalls_2019,
	title = {On the {Pitfalls} and {Vulnerabilities} of {Schedule} {Randomization} {Against} {Schedule}-{Based} {Attacks}},
	doi = {10.1109/RTAS.2019.00017},
	abstract = {Schedule randomization is one of the recently introduced security defenses against schedule-based attacks, i.e., attacks whose success depends on a particular ordering between the execution window of an attacker and a victim task within the system. It falls into the category of information hiding (as opposed to deterministic isolation-based defenses) and is designed to reduce the attacker's ability to infer the future schedule. This paper aims to investigate the limitations and vulnerabilities of schedule randomization-based defenses in real-time systems. We first provide definitions, categorization, and examples of schedule-based attacks, and then discuss the challenges of employing schedule randomization in real-time systems. Further, we provide a preliminary security test to determine whether a certain timing relation between the attacker and victim tasks will never happen in systems scheduled by a fixed-priority scheduling algorithm. Finally, we compare fixed-priority scheduling against schedule-randomization techniques in terms of the success rate of various schedule-based attacks for both synthetic and real-world applications. Our results show that, in many cases, schedule randomization either has no security benefits or can even increase the success rate of the attacker depending on the priority relation between the attacker and victim tasks.},
	booktitle = {2019 {IEEE} {Real}-{Time} and {Embedded} {Technology} and {Applications} {Symposium} ({RTAS})},
	author = {Nasri, Mitra and Chantem, Thidapat and Bloom, Gedare and Gerdes, Ryan M.},
	month = apr,
	year = {2019},
	note = {ISSN: 1545-3421},
	keywords = {security of data, real-time systems, cyber physical systems, scheduling, deterministic isolation-based defenses, fixed-priority scheduling algorithm, random forests, random functions, Real-time systems security, schedule randomization, schedule randomization-based defenses, schedule-based attack, schedule-based attacks, schedule-randomization techniques, victim task},
	pages = {103--116},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/QNZVB26J/8743327.html:text/html;Submitted Version:/home/gedare/Zotero/storage/H82RJLT7/Nasri et al. - 2019 - On the Pitfalls and Vulnerabilities of Schedule Ra.pdf:application/pdf},
}

@article{agarwal_comparison_2019,
	title = {Comparison of {File} {Systems} in {RTEMS}},
	volume = {16},
	url = {https://doi.org/10.1145/3373400.3373406},
	doi = {10.1145/3373400.3373406},
	number = {3},
	journal = {SIGBED Rev.},
	author = {Agarwal, Udit Kumar and Ashokbhai, Vara Punit and Bloom, Gedare and Mauderer, Christian and Sherrill, Joel},
	month = nov,
	year = {2019},
	keywords = {benchmarking, RTEMS, filesystems},
	pages = {39--44},
}

@article{young_survey_2019,
	title = {Survey of {Automotive} {Controller} {Area} {Network} {Intrusion} {Detection} {Systems}},
	volume = {36},
	issn = {2168-2364},
	doi = {10.1109/MDAT.2019.2899062},
	abstract = {Editor's note: Control Area Network (CAN) is one of the most popular targets for malicious attacks and exploitations in modern automotive systems. The goal of intrusion detection systems (IDS) is to identify and mitigate security attacks; consequently, they are of paramount importance to automotive security. This article surveys the state of the art in IDS, with special emphasis on techniques for detecting attacks on CAN modules. -Sandip Ray, University of Florida},
	number = {6},
	journal = {IEEE Design Test},
	author = {Young, Clinton and Zambreno, Joseph and Olufowobi, Habeeb and Bloom, Gedare},
	month = dec,
	year = {2019},
	keywords = {Intrusion detection, Monitoring, security of data, intrusion detection system, malicious attacks, IDS, security attacks, Engines, controller area networks, in-vehicle network, Controller area network, Computer hacking, Automotive engineering, Timing, automotive security, automotive controller area network intrusion detection systems, automotive engineering},
	pages = {48--55},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/MSCV4AVV/8640808.html:text/html},
}

@article{bloom_event_2019,
	title = {Event {Notification} in {CAN}-{Based} {Sensor} {Networks}},
	volume = {15},
	issn = {1941-0050},
	doi = {10.1109/TII.2019.2904082},
	abstract = {Preventive and reactive maintenance require the collection of an ever-increasing amount of information from industrial plants and other complex systems such as those based on robotized cells, a need that can be fulfilled by means of a suitable event notification mechanism. At the same time, timing and delivery reliability requirements in those scenarios are typically less demanding than those in other cases, thus enabling the adoption of best-effort notification approaches. This paper presents, evaluates, and compares some of those approaches, based on either standard Controller Area Network (CAN) messaging or a recently proposed protocol extension called CAN with eXtensible in-frame Reply (CAN XR). In the second case, the combined use of Bloom filters is also envisaged to increase flexibility. Results show that the latter approaches are advantageous in a range of event generation rates and network topologies of practical relevance.},
	number = {10},
	journal = {IEEE Transactions on Industrial Informatics},
	author = {Bloom, Gedare and Cena, Gianluca and Bertolotti, Ivan Cibrario and Hu, Tingting and Navet, Nicolas and Valenzano, Adriano},
	month = oct,
	year = {2019},
	keywords = {Informatics, Cyber-Physical Systems, real-time systems, protocols, data structures, Safety, wireless sensor networks, industrial plants, controller area networks, Protocols, Industry 4.0, telecommunication computing, Wireless sensor networks, Controller Area Network (CAN), Industrial plants, Maintenance engineering, Transceivers, Bloom filter, CAN-based sensor networks, complex systems, Cyber-Physical Action Language (CPAL), delivery reliability requirements, event generation rates, event notification, Industrial Internet of Things (IIoT), network topologies, preventive maintenance, protocol extension, reactive maintenance, robotized cells, standard Controller Area Network messaging, suitable event notification mechanism, telecommunication network reliability, telecommunication network topology, wired sensor networks},
	pages = {5613--5625},
	file = {Full Text:/home/gedare/Zotero/storage/TFUFH9ER/Bloom et al. - 2019 - Event Notification in CAN-Based Sensor Networks.pdf:application/pdf;IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/3NR99MAZ/8664114.html:text/html},
}

@inproceedings{olufowobi_controller_2019,
	address = {New York, NY, USA},
	series = {{CPS}-{SPC}'19},
	title = {Controller {Area} {Network} {Intrusion} {Prevention} {System} {Leveraging} {Fault} {Recovery}},
	isbn = {978-1-4503-6831-5},
	url = {https://doi.org/10.1145/3338499.3357360},
	doi = {10.1145/3338499.3357360},
	booktitle = {Proceedings of the {ACM} {Workshop} on {Cyber}-{Physical} {Systems} {Security} \& {Privacy}},
	publisher = {Association for Computing Machinery},
	author = {Olufowobi, Habeeb and Hounsinou, Sena and Bloom, Gedare},
	year = {2019},
	note = {event-place: London, United Kingdom},
	keywords = {intrusion detection systems, can, data injection, automotive security, intrusion prevention system, reboot recovery},
	pages = {63--73},
}

@article{olufowobi_saiducant_2020,
	title = {{SAIDuCANT}: {Specification}-{Based} {Automotive} {Intrusion} {Detection} {Using} {Controller} {Area} {Network} ({CAN}) {Timing}},
	volume = {69},
	issn = {1939-9359},
	shorttitle = {{SAIDuCANT}},
	doi = {10.1109/TVT.2019.2961344},
	abstract = {The proliferation of embedded devices in modern vehicles has opened the traditionally-closed vehicular system to the risk of cybersecurity attacks through physical and remote access to the in-vehicle network such as the controller area network (CAN). The CAN bus does not implement a security protocol that can protect the vehicle against the increasing cyber and physical attacks. To address this risk, we introduce a novel algorithm to extract the real-time model parameters of the CAN bus and develop SAIDuCANT, a specification-based intrusion detection system (IDS) using anomaly-based supervised learning with the real-time model as input. We evaluate the effectiveness of SAIDuCANT with real CAN logs collected from two passenger cars and on an open-source CAN dataset collected from real-world scenarios. Experimental results show that SAIDuCANT can effectively detect data injection attacks with low false positive rates. Over four real attack scenarios from the open-source dataset, SAIDuCANT observes at most one false positive before detecting an attack whereas other detection approaches using CAN timing features detect on average more than a hundred false positives before a real attack occurs.},
	number = {2},
	journal = {IEEE Transactions on Vehicular Technology},
	author = {Olufowobi, Habeeb and Young, Clinton and Zambreno, Joseph and Bloom, Gedare},
	month = feb,
	year = {2020},
	note = {Conference Name: IEEE Transactions on Vehicular Technology},
	keywords = {Intrusion detection, security of data, intrusion detection system, real-time systems, data injection attacks, physical attacks, automobiles, learning (artificial intelligence), CAN bus, controller area networks, in-vehicle network, security protocol, Protocols, Automotive engineering, Real-time systems, Timing, Time factors, specification-based intrusion detection system, timing model, automotive security, attack scenarios, controller area network timing, cybersecurity attacks, embedded devices, low false positive rates, open-source CAN dataset, open-source dataset, physical access, real-time model parameters, remote access, SAIDuCANT, specification-based automotive intrusion detection, timing features, traditionally-closed vehicular system},
	pages = {1484--1494},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/IVIY2ZWV/8937816.html:text/html},
}

@inproceedings{bloom_harmonizing_2020,
	title = {Harmonizing {ARINC} 653 and {Realtime} {POSIX} for {Conformance} to the {FACE} {Technical} {Standard}},
	doi = {10.1109/ISORC49007.2020.00023},
	abstract = {The avionics industry is converging toward the next generation of software standards produced by The Open Group via the Future Airborne Capability Environment (FACE) consortium and related FACE Technical Standard. The standard combines ARINC 653, a previous avionics standard, with subsets of POSIX 1003.1 that are closely aligned with the POSIX realtime profiles PSE52, PSE53, and PSE54. In this paper, we describe our approach to design, implement, and certify a system with FACE Conformance to the FACE Operating System Segment Safety Base profile. Our approach integrates the ARINC 653-compliant Deos with RTEMS, an open-source real-time operating system (RTOS). Our goal in combining Deos/RTEMS was to achieve certification of FACE Conformance in a low-cost manner by relying on existing, mature software that already provides the majority of the functionality required by the FACE Technical Standard. We reached our goal with under 10,000 source lines of code (SLOC) written to integrate RTEMS into Deos and implement any additional POSIX application programming interfaces (APIs) and tests needed for certification.},
	booktitle = {2020 {IEEE} 23rd {International} {Symposium} on {Real}-{Time} {Distributed} {Computing} ({ISORC})},
	author = {Bloom, Gedare and Sherrill, Joel},
	month = may,
	year = {2020},
	note = {ISSN: 2375-5261},
	keywords = {real-time systems, POSIX, RTOS, operating systems (computers), aerospace computing, avionics, RTEMS, public domain software, application program interfaces, Deos, FACE, Future Airborne Capability Environment, ARINC 653, ARINC 653-compliant Deos, avionics industry, avionics standard, FACE Operating System Segment Safety Base profile, FACE Technical Standard, future airborne capability environment, Open Group, open source real time operating system, POSIX 1003.1, POSIX application programming interfaces, PSE52, PSE53, PSE54, realtime POSIX, software standards, user interfaces, epics security},
	pages = {98--105},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/LV75APDG/9112986.html:text/html},
}

@inproceedings{dangal_towards_2020,
	title = {Towards {Industrial} {Security} {Through} {Real}-time {Analytics}},
	doi = {10.1109/ISORC49007.2020.00036},
	abstract = {Industrial control system (ICS) denotes a system consisting of actuators, control stations, and network that manages processes and functions in an industrial setting. The ICS community faces two major problems to keep pace with the broader trends of Industry 4.0: (1) a data rich, information poor (DRIP) syndrome, and (2) risk of financial and safety harms due to security breaches. In this paper, we propose a private cloud in the loop ICS architecture for real-time analytics that can bridge the gap between low data utilization and security hardening.},
	booktitle = {2020 {IEEE} 23rd {International} {Symposium} on {Real}-{Time} {Distributed} {Computing} ({ISORC})},
	author = {Dangal, Prajjwal and Bloom, Gedare},
	month = may,
	year = {2020},
	note = {ISSN: 2375-5261},
	keywords = {industrial control, security, security of data, actuators, real-time, cloud computing, production engineering computing, control stations, data rich information poor syndrome, DRIP syndrome, financial safety harms, ICS community, industrial, industrial control system, industrial security, industrial setting, loop ICS architecture, low data utilization, real-time analytics, security breaches, security hardening, epics security},
	pages = {156--157},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/C3VQND57/9112940.html:text/html},
}

@article{ezeobi_reverse_2020,
	title = {Reverse {Engineering} {Controller} {Area} {Network} {Messages} using {Unsupervised} {Machine} {Learning}},
	issn = {2162-2256},
	doi = {10.1109/MCE.2020.3023538},
	abstract = {The smart city landscape is rife with opportunities for mobility and economic optimization, but also presents many security concerns spanning the range of components and systems in the smart ecosystem. One key enabler for this ecosystem is smart transportation and transit, which is foundationally built upon connected vehicles. Ensuring vehicular security, while necessary to guarantee passenger and pedestrian safety, is itself challenging due to the broad attack surfaces of modern automotive systems. A single car contains dozens to hundreds of small embedded computing devices known as electronic control units (ECUs) executing 100s of millions of lines of code; the inherent complexity of this tightly-integrated cyber-physical system (CPS) is one of the key problems that frustrate effective security. We describe an approach to help reduce the complexity of security analyses by leveraging unsupervised machine learning to learn clusters of messages passed between ECUs that correlate with changes in the CPS state of a vehicle as it moves throughout the world. Our approach can help to improve the security of vehicles in a smart city, and can leverage smart city infrastructure to further enrich and refine the quality of the machine learning output.},
	journal = {IEEE Consumer Electronics Magazine},
	author = {Ezeobi, Uchenna and Olufowobi, Habeeb and Young, Clinton and Zambreno, Joseph and Bloom, Gedare},
	year = {2020},
	note = {Conference Name: IEEE Consumer Electronics Magazine},
	keywords = {Security, Complexity theory, Clustering algorithms, Smart cities, Machine learning, Ecosystems, Reverse engineering},
	pages = {1--1},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/HJGL9QJ8/9195153.html:text/html},
}

@book{bloom_real-time_2020,
	title = {Real-{Time} {Systems} {Development} with {RTEMS} and {Multicore} {Processors}},
	isbn = {978-1-351-25579-0},
	url = {https://www.taylorfrancis.com/books/9781351255790},
	abstract = {The proliferation of multicore processors in the embedded market for Internet-of-Things (IoT) and Cyber-Physical Systems (CPS) makes developing real-time},
	language = {en},
	urldate = {2020-10-14},
	publisher = {CRC Press},
	author = {Bloom, Gedare and Sherrill, Joel and Hu, Tingting and Bertolotti, Ivan Cibrario},
	month = nov,
	year = {2020},
	doi = {10.1201/9781351255790},
	keywords = {epics security},
	file = {Snapshot:/home/gedare/Zotero/storage/RKLAKZ7X/9781351255790.html:text/html},
}

@inproceedings{bloom_weepingcan_2021,
	title = {{WeepingCAN}: {A} {Stealthy} {CAN} {Bus}-off {Attack}},
	doi = {https://dx.doi.org/10.14722/autosec.2021.23002},
	booktitle = {Workshop on {Automotive} and {Autonomous} {Vehicle} {Security}},
	publisher = {Internet Society},
	author = {Bloom, Gedare},
	month = feb,
	year = {2021},
	keywords = {automotive security},
}

@article{marshall_precise_2021,
	title = {Precise {Cache} {Profiling} for {Studying} {Radiation} {Effects}},
	volume = {20},
	issn = {1539-9087},
	url = {https://doi.org/10.1145/3442339},
	doi = {10.1145/3442339},
	abstract = {Increased access to space has led to an increase in the usage of commodity processors in radiation environments. These processors are vulnerable to transient faults such as single event upsets that may cause bit-flips in processor components. Caches in particular are vulnerable due to their relatively large area, yet are often omitted from fault injection testing because many processors do not provide direct access to cache contents and they are often not fully modeled by simulators. The performance benefits of caches make disabling them undesirable, and the presence of error correcting codes is insufficient to correct for increasingly common multiple bit upsets. This work explores building a programâ€™s cache profile by collecting cache usage information at an instruction granularity via commonly available on-chip debugging interfaces. The profile provides a tighter bound than cache utilization for cache vulnerability estimates (50\% for several benchmarks). This can be applied to reduce the number of fault injections required to characterize behavior by at least two-thirds for the benchmarks we examine. The profile enables future work in hardware fault injection for caches that avoids the biases of existing techniques.},
	number = {3},
	urldate = {2021-04-06},
	journal = {ACM Transactions on Embedded Computing Systems},
	author = {Marshall, James and Gifford, Robert and Bloom, Gedare and Parmer, Gabriel and Simha, Rahul},
	month = mar,
	year = {2021},
	keywords = {Cache faults, cache profiling, single event upset},
	pages = {25:1--25:25},
}

@inproceedings{duby_detecting_2022,
	title = {Detecting and {Classifying} {Self}-{Deleting} {Windows} {Malware} {Using} {Prefetch} {Files}},
	doi = {10.1109/CCWC54503.2022.9720874},
	abstract = {Malware detection and analysis can be a burdensome task for incident responders. As such, research has turned to machine learning to automate malware detection and malware family classification. Existing work extracts and engineers static and dynamic features from the malware sample to train classifiers. Despite promising results, such techniques assume that the analyst has access to the malware executable file. Self-deleting malware invalidates this assumption and requires analysts to find forensic evidence of malware execution for further analysis. In this paper, we present and evaluate an approach to detecting malware that executed on a Windows target and further classify the malware into its associated family to provide semantic insight. Specifically, we engineer features from the Windows prefetch file, a file system forensic artifact that archives process information. Results show that it is possible to detect the malicious artifact with 99\% accuracy; furthermore, classifying the malware into a fine-grained family has comparable performance to techniques that require access to the original executable. We also provide a thorough security discussion of the proposed approach against adversarial diversity.},
	booktitle = {2022 {IEEE} 12th {Annual} {Computing} and {Communication} {Workshop} and {Conference} ({CCWC})},
	author = {Duby, Adam and Taylor, Teryl and Bloom, Gedare and Zhuang, Yanyan},
	month = jan,
	year = {2022},
	keywords = {Malware, Conferences, Prefetching, Semantics, Feature extraction, forensics, Machine learning, Forensics, Malware analysis, malware classification, prefetch},
	pages = {0745--0751},
}

@inproceedings{banerjee_tragedy_2022,
	title = {The {Tragedy} of the {Miners}},
	doi = {10.1109/CCNC49033.2022.9700705},
	abstract = {In a network of mining pools that secure Bitcoin-like blockchains, it is known that a self-interested mining pool can dishonestly siphon off another poolâ€™s mining rewards by executing a block withholding (BWH) attack. In this paper, we show that a BWH attack is always unprofitable for an initial startup period which is at least one difficulty retarget interval (approximately 14 days for Bitcoin). Furthermore, we prove that the payback period to recoup this initial startup cost is always at least as long as the initial unprofitable startup interval, and we show numerically that it can be substantially longer. Thus, the decision of whether or not to execute a BWH attack is not a dominant strategy, and the so called Minerâ€™s Dilemma is not in fact a dilemma.},
	booktitle = {2022 {IEEE} 19th {Annual} {Consumer} {Communications} {Networking} {Conference} ({CCNC})},
	author = {Banerjee, Vijay and Rabinowitz, Ryan and Stidd, Mark and Lewis, Rory and Brown, Philip N. and Bloom, Gedare},
	month = jan,
	year = {2022},
	note = {ISSN: 2331-9860},
	keywords = {Costs, Transient analysis, Bitcoin, Blockchains},
	pages = {760--765},
}

@inproceedings{lawrence_shining_2022,
	title = {Shining {New} {Light} on {Useful} {Features} for {Network} {Intrusion} {Detection} {Algorithms}},
	doi = {10.1109/CCNC49033.2022.9700654},
	abstract = {Network intrusion detection systems (NIDS) today must quickly provide visibility into anomalous behavior on a growing amount of data. Meanwhile different data models have evolved over time, each providing a different set of features to classify attacks. Defenders have limited time to retrain classifiers, while the scale of data and feature mismatch between data models can affect the ability to periodically retrain. Much work has focused on classification accuracy yet feature selection is a key part of machine learning that, when optimized, reduces the training time and can increase accuracy by removing poorly performing features that introduce noise. With a larger feature space, the pursuit of more features is not as valuable as selecting better features. In this paper, we use an ensemble approach of filter methods to rank features followed by a voting technique to select a subset of features. We evaluate our approach using three datasets to show that, across datasets and network topologies, similar features have a trivial effect on classifier accuracy after removal. Our approach identifies poorly performing features to remove in a classifier-agnostic manner that can significantly save time for periodic retraining of production NIDS.},
	booktitle = {2022 {IEEE} 19th {Annual} {Consumer} {Communications} {Networking} {Conference} ({CCNC})},
	author = {Lawrence, Heather and Ezeobi, Uchenna and Bloom, Gedare and Zhuang, Yanyan},
	month = jan,
	year = {2022},
	note = {ISSN: 2331-9860},
	keywords = {NIDS, Network topology, Training, Costs, Production, Feature extraction, Machine learning, Network intrusion detection, Ensemble Feature Selection, Network Intrusion Detection Systems},
	pages = {369--377},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/V5N7SG6S/9700654.html:text/html},
}

@inproceedings{hounsinou_vulnerability_2021,
	title = {Vulnerability of {Controller} {Area} {Network} to {Schedule}-{Based} {Attacks}},
	doi = {10.1109/RTSS52674.2021.00051},
	abstract = {The secure functioning of automotive systems is vital to the safety of their passengers and other roadway users. One of the critical functions for safety is the controller area network (CAN), which interconnects the safety-critical electronic control units (ECUs) in the majority of ground vehicles. Unfortunately CAN is known to be vulnerable to several attacks. One such attack is the bus-off attack, which can be used to cause a victim ECU to disconnect itself from the CAN bus and, subsequently, for an attacker to masquerade as that ECU. A limitation of the bus-off attack is that it requires the attacker to achieve tight synchronization between the transmission of the victim and the attackerâ€™s injected message. In this paper, we introduce a schedule-based attack framework for the CAN bus-off attack that uses the real-time schedule of the CAN bus to predict more attack opportunities than previously known. We describe a ranking method for an attacker to select and optimize its attack injections with respect to criteria such as attack success rate, bus perturbation, or attack latency. The results show that vulnerabilities of the CAN bus can be enhanced by schedulebased attacks.},
	booktitle = {2021 {IEEE} {Real}-{Time} {Systems} {Symposium} ({RTSS})},
	author = {Hounsinou, Sena and Stidd, Mark and Ezeobi, Uchenna and Olufowobi, Habeeb and Nasri, Mitra and Bloom, Gedare},
	month = dec,
	year = {2021},
	note = {ISSN: 2576-3172},
	keywords = {Control systems, Safety, Schedules, Real-time systems, Synchronization, Controller Area Network, Land vehicles, Bus-off Attack, Perturbation methods, Schedule-Based Attack},
	pages = {495--507},
}

@inproceedings{hounsinou_work--progress_2021,
	title = {Work-in-{Progress}: {Enabling} {Secure} {Boot} for {Real}-{Time} {Restart}-{Based} {Cyber}-{Physical} {Systems}},
	shorttitle = {Work-in-{Progress}},
	doi = {10.1109/RTSS52674.2021.00056},
	abstract = {Several cyber-physical systems use real-time restart-based embedded systems with the Simplex architecture to provide safety guarantees against system faults. Some approaches have been developed to protect such systems from security violations too, but none of these approaches can prevent an adversary from modifying the operating system or application code to execute an attack that persists even after a reboot. In this work, we present a secure boot mechanism to restore real-time restart-based embedded systems into a secure computing environment after every restart. We analyze the delay introduced by the proposed security feature and present preliminary results to demonstrate the viability of our approach using an open-source bootloader and real-time operating system.},
	booktitle = {2021 {IEEE} {Real}-{Time} {Systems} {Symposium} ({RTSS})},
	author = {Hounsinou, Sena and Banerjee, Vijay and Peng, Chunhao and Hasan, Monowar and Bloom, Gedare},
	month = dec,
	year = {2021},
	note = {ISSN: 2576-3172},
	keywords = {Safety, Delays, RTEMS, Computer architecture, Cyber-physical systems, Real-time systems, Embedded systems, TEE, Codes, Secure Boot, U-Boot},
	pages = {524--527},
}

@inproceedings{banerjee_modular_2021,
	title = {Modular {Network} {Stacks} in the {Real}- {Time} {Executive} for {Multiprocessor} {Systems}},
	doi = {10.1109/RWS52686.2021.9611788},
	abstract = {Real-Time Executive for Multiprocessor Systems (RTEMS) is a real-time operating system used by the Experimental Physics and Industrial Control System (EPICS) open-source software for high-precision scientific instruments such as particle accelerators and telescopes. EPICS relies on the networking capabilities of RTEMS for microcontrollers that need to meet real-time constraints. However, the networking available in RTEMS either lacks the necessary drivers to be fully operational or lacks security features required in modern networks. In this paper, we introduce a modular networking architecture for RTEMS by separating the network software implementation and device drivers from the RTEMS kernel to provide them as a static library for applications to use. This networking-as-a-library concept provides application developers with better capabilities to select the network features needed for their target application and to keep their networking software undated and secure.},
	booktitle = {2021 {Resilience} {Week} ({RWS})},
	author = {Banerjee, Vijay and Hounsinou, Sena and Gerber, Harrison and Bloom, Gedare},
	month = oct,
	year = {2021},
	keywords = {RTEMS, Microcontrollers, Libraries, Security, Physics, Real-time systems, EPICS, FreeBSD, libBSD, Linear particle accelerator, lwIP, Modular Networking Stack, Networking, TCP/IP, Telescopes},
	pages = {1--7},
}

@article{lowe-power_gem5_2020,
	title = {The gem5 {Simulator}: {Version} 20.0+},
	shorttitle = {The gem5 {Simulator}},
	url = {http://arxiv.org/abs/2007.03152},
	abstract = {The open-source and community-supported gem5 simulator is one of the most popular tools for computer architecture research. This simulation infrastructure allows researchers to model modern computer hardware at the cycle level, and it has enough fidelity to boot unmodified Linux-based operating systems and run full applications for multiple architectures including x86, Arm, and RISC-V. The gem5 simulator has been under active development over the last nine years since the original gem5 release. In this time, there have been over 7500 commits to the codebase from over 250 unique contributors which have improved the simulator by adding new features, fixing bugs, and increasing the code quality. In this paper, we give and overview of gem5's usage and features, describe the current state of the gem5 simulator, and enumerate the major changes since the initial release of gem5. We also discuss how the gem5 simulator has transitioned to a formal governance model to enable continued improvement and community support for the next 20 years of computer architecture research.},
	urldate = {2022-01-13},
	journal = {arXiv:2007.03152 [cs]},
	author = {Lowe-Power, Jason and Ahmad, Abdul Mutaal and Akram, Ayaz and Alian, Mohammad and Amslinger, Rico and Andreozzi, Matteo and Armejach, AdriÃ  and Asmussen, Nils and Beckmann, Brad and Bharadwaj, Srikant and Black, Gabe and Bloom, Gedare and Bruce, Bobby R. and Carvalho, Daniel Rodrigues and Castrillon, Jeronimo and Chen, Lizhong and Derumigny, Nicolas and Diestelhorst, Stephan and Elsasser, Wendy and Escuin, Carlos and Fariborz, Marjan and Farmahini-Farahani, Amin and Fotouhi, Pouya and Gambord, Ryan and Gandhi, Jayneel and Gope, Dibakar and Grass, Thomas and Gutierrez, Anthony and Hanindhito, Bagus and Hansson, Andreas and Haria, Swapnil and Harris, Austin and Hayes, Timothy and Herrera, Adrian and Horsnell, Matthew and Jafri, Syed Ali Raza and Jagtap, Radhika and Jang, Hanhwi and Jeyapaul, Reiley and Jones, Timothy M. and Jung, Matthias and Kannoth, Subash and Khaleghzadeh, Hamidreza and Kodama, Yuetsu and Krishna, Tushar and Marinelli, Tommaso and Menard, Christian and Mondelli, Andrea and Moreto, Miquel and MÃ¼ck, Tiago and Naji, Omar and Nathella, Krishnendra and Nguyen, Hoa and Nikoleris, Nikos and Olson, Lena E. and Orr, Marc and Pham, Binh and Prieto, Pablo and Reddy, Trivikram and Roelke, Alec and Samani, Mahyar and Sandberg, Andreas and Setoain, Javier and Shingarov, Boris and Sinclair, Matthew D. and Ta, Tuan and Thakur, Rahul and Travaglini, Giacomo and Upton, Michael and Vaish, Nilay and Vougioukas, Ilias and Wang, William and Wang, Zhengrong and Wehn, Norbert and Weis, Christian and Wood, David A. and Yoon, Hongil and Zulian, Ã‰der F.},
	month = sep,
	year = {2020},
	note = {arXiv: 2007.03152},
	keywords = {Computer Science - Hardware Architecture},
	file = {arXiv Fulltext PDF:/home/gedare/Zotero/storage/PBNVK3MQ/Lowe-Power et al. - 2020 - The gem5 Simulator Version 20.0+.pdf:application/pdf;arXiv.org Snapshot:/home/gedare/Zotero/storage/KINMKMR5/2007.html:text/html},
}

@inproceedings{dubey_strong_2021,
	address = {New York, NY, USA},
	series = {{EMSOFT} '21},
	title = {Strong {APA} scheduling in a real-time operating system: work-in-progress},
	isbn = {978-1-4503-8712-5},
	shorttitle = {Strong {APA} scheduling in a real-time operating system},
	url = {https://doi.org/10.1145/3477244.3477623},
	doi = {10.1145/3477244.3477623},
	abstract = {Arbitrary processor affinities are used in multiprocessor systems to specify the processors on which a task can be scheduled. However, affinity constraints can prevent some high priority real-time tasks from being scheduled, while lower priority tasks execute. This paper presents an implementation and evaluation of the Strong Arbitrary Processor Affinity scheduling on a real-time operating system, an approach that not only respects user-defined affinities, but also supports migration of a higher priority task to allow execution of a task limited by affinity constraints. Results show an improvement in response and turnaround times of higher priority tasks.},
	urldate = {2021-10-13},
	booktitle = {Proceedings of the 2021 {International} {Conference} on {Embedded} {Software}},
	publisher = {Association for Computing Machinery},
	author = {Dubey, Richi and Banerjee, Vijay and Hounsinou, Sena and Bloom, Gedare},
	month = sep,
	year = {2021},
	keywords = {RTOS, RTEMS, APA scheduling, SMP},
	pages = {47--48},
	file = {Full Text PDF:/home/gedare/Zotero/storage/IMZ2RGGZ/Dubey et al. - 2021 - Strong APA scheduling in a real-time operating sys.pdf:application/pdf},
}

@inproceedings{seaton_competitive_2023,
	title = {Competitive {Information} {Provision} {Among} {Internet} {Routing} {Nodes}},
	doi = {10.23919/ACC55779.2023.10156591},
	abstract = {In proposed path-aware designs for the Internet, end hosts can select which path their packets use. What criteria should the end hosts use to select paths? Recent work has proposed path-aware access control frameworks in which routing nodes publicly report their knowledge of the security postures of other nodes; end hosts can then base their routing choices on these reports. However, nothing is known regarding the nodesâ€™ incentives to report their knowledge truthfully. In this paper, we consider the case in which each network node is strategic, and seeks to craft its public reports to manipulate traffic patterns in its own favor. In the context of a simple selfish routing problem with two strategic nodes, we show that for a wide swath of the parameter space, each node has a dominant reporting strategy, meaning that its individually optimal strategy does not depend on the strategy of the other node. These dominant strategies are generally not truthful. At the resulting dominant-strategy Nash equilibrium, we show that the expected social cost is (often considerably) higher than that achieved when both nodes are completely truthful. Nonetheless, we prove that these equilibrium reporting strategies are never perverse, meaning that their resulting social cost is never worse than if traffic were uninformed as to network state.},
	booktitle = {2023 {American} {Control} {Conference} ({ACC})},
	author = {Seaton, Joshua H. and Hounsinou, Sena and Bloom, Gedare and Brown, Philip N.},
	month = may,
	year = {2023},
	note = {ISSN: 2378-5861},
	keywords = {Traffic control, Nash equilibrium, Internet, Access control, Costs, Routing},
	pages = {1074--1079},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/DHG949KD/10156591.html:text/html},
}

@inproceedings{meadows_sidecar-based_2023,
	address = {New York, NY, USA},
	series = {{SACMAT} '23},
	title = {Sidecar-based {Path}-aware {Security} for {Microservices}},
	isbn = {9798400701733},
	url = {https://dl.acm.org/doi/10.1145/3589608.3594742},
	doi = {10.1145/3589608.3594742},
	abstract = {Microservice architectures decompose web applications into loosely-coupled, distributed components that interact with each other to provide an overall service. While this popular software architecture paradigm has many advantages in development and deployment, it also introduces a wider attack surface that is vulnerable to both internal and external attackers. Potentially malicious third-party services or software packages, as well as increased communication endpoints, introduce a wide array of security concerns. To improve the resiliency of microservice-based applications, many of which store sensitive data, we propose a novel, path-based anomaly detection and access control infrastructure that requires no modifications to existing software. We propose leveraging trusted proxies deployed alongside each service for request inspection, anomaly detection and signed token propagation for end-user path validation. Our approach reduces the trusted computing base away from the microservices to a smaller set of components that allow for less trust and a smaller attack surface.},
	urldate = {2023-09-07},
	booktitle = {Proceedings of the 28th {ACM} {Symposium} on {Access} {Control} {Models} and {Technologies}},
	publisher = {Association for Computing Machinery},
	author = {Meadows, Catherine and Hounsinou, Sena and Wood, Timothy and Bloom, Gedare},
	month = may,
	year = {2023},
	keywords = {microservice security, node.js, service-oriented architecture},
	pages = {157--162},
}

@inproceedings{mofidi_l-ids_2023,
	address = {New York, NY, USA},
	series = {{IoTDI} '23},
	title = {L-{IDS}: {A} lightweight hardware-assisted {IDS} for {IoT} systems to detect ransomware attacks},
	isbn = {9798400700378},
	shorttitle = {L-{IDS}},
	url = {https://dl.acm.org/doi/10.1145/3576842.3589170},
	doi = {10.1145/3576842.3589170},
	abstract = {In recent years, ransomware has evolved to target Internet of things (IoT) devices, such as medical equipment and thermostats. Traditional ransomware detection methods may not be effective for resource-constrained IoT devices as IoT-based ransomware is geared towards impairing functionality rather than accessing data. Therefore, this article proposes L-IDS, a lightweight hardware-assisted intrusion detection system that combines hardware-assisted security, such as Trusted Execution Environment, with machine learning algorithms to detect and mitigate ransomware inside an IoT system with fewer resources. The proposed approach can more effectively protect IoT systems from ransomware attacks and requires less resources than traditional security scanning methods.},
	urldate = {2023-09-07},
	booktitle = {Proceedings of the 8th {ACM}/{IEEE} {Conference} on {Internet} of {Things} {Design} and {Implementation}},
	publisher = {Association for Computing Machinery},
	author = {Mofidi, Farhad and Hounsinou, Sena and Bloom, Gedare},
	month = may,
	year = {2023},
	keywords = {Internet of Things, Intrusion Detection System, Trusted Execution Environment, Machine Learning, Ransomware, Hardware-assisted security, IoT Ransomware},
	pages = {464--465},
}

@inproceedings{ikumapayi_work_2023,
	title = {Work in {Progress}: {Schedulability} {Analysis} of {CAN} and {CAN} {FD} {Authentication}},
	shorttitle = {Work in {Progress}},
	doi = {10.1109/RTAS58335.2023.00038},
	abstract = {Ensuring the data integrity of messages transmitted over the Controller Area Network (CAN) bus and other vehicular networks is achieved through the implementation of cryptographic authentication protocols. However, these protocols raise concerns about a significant increase in response time due to the restrictions on CAN frame size and bandwidth. This paper presents a comprehensive analysis of the impact on response time of CAN and CAN Flexible Data-rate (CAN FD) messages with the implementation of cryptographic message authentication codes (MACs) and the periodic transmission of these codes. Our evaluation is based on a randomized schedulability experiment to provide insights into the overhead incurred by adding authentication to the frame payloads.},
	booktitle = {2023 {IEEE} 29th {Real}-{Time} and {Embedded} {Technology} and {Applications} {Symposium} ({RTAS})},
	author = {Ikumapayi, Omolade and Olufowobi, Habeeb and Daily, Jeremy and Hu, Tingting and Bertolotti, Ivan Cibrario and Bloom, Gedare},
	month = may,
	year = {2023},
	note = {ISSN: 2642-7346},
	keywords = {Authentication, Protocols, Real-time systems, Bandwidth, Time factors, Data integrity, Response Time Analysis, Controller Area Network, Codes, CAN FD},
	pages = {349--352},
}

@article{ikumapayi_canasta_2023,
	title = {{CANASTA}: {Controller} {Area} {Network} {Authentication} {Schedulability} {Timing} {Analysis}},
	volume = {72},
	issn = {1939-9359},
	shorttitle = {{CANASTA}},
	doi = {10.1109/TVT.2023.3258746},
	abstract = {The Controller Area Network (CAN) dominates in-vehicle networking systems in modern vehicles. CAN was designed with low-latency and reliability as key features. Authenticity of a CAN frame was not considered in the design, thus, most in-vehicle network nodes inherently trust received messages as coming from a legitimate source. As a result, it is trivial to program (or hack) a network node to spoof traffic. Authentication is challenging for CAN and related protocols, such as SAE J1939, due to limited frame sizes and high bus utilization. Adding a message authentication code (MAC) as a separate message can unduly stress the real-time delivery of safety-critical messages. Although this stressor is well-known, the impact of authentication protocols on real-time message delivery in CAN has not yet been thoroughly examined. In this paper, we provide the first comprehensive analysis of real-time schedulability analysis applied to authentication schemes for CAN, CAN Flexible Data-rate (CAN FD), and CAN extra long payload (CAN XL). We formulate the response time analysis for addition of MACs and periodic transmission of MACs, and we examine their impact on two case studies and through evaluation with randomized schedulability experiments over a wide range of message sets.},
	number = {8},
	journal = {IEEE Transactions on Vehicular Technology},
	author = {Ikumapayi, Omolade and Olufowobi, Habeeb and Daily, Jeremy and Hu, Tingting and Bertolotti, Ivan Cibrario and Bloom, Gedare},
	month = aug,
	year = {2023},
	note = {Conference Name: IEEE Transactions on Vehicular Technology},
	keywords = {response time analysis, Payloads, Controller area network, Authentication, Protocols, Real-time systems, Time factors, Task analysis, Message authentication, CAN FD, CAN XL},
	pages = {10024--10036},
}

@inproceedings{banerjee_secure_2022,
	address = {New York, NY, USA},
	series = {{CPSIoTSec}'22},
	title = {Secure {Reboots} for {Real}-{Time} {Cyber}-{Physical} {Systems}},
	isbn = {978-1-4503-9876-3},
	url = {https://doi.org/10.1145/3560826.3563384},
	doi = {10.1145/3560826.3563384},
	abstract = {Cyber-Physical Systems (CPS) such as industrial control systems, automobiles, and medical devices often consist of applications with real-time properties. Due to the safety-critical nature of the application domain, multiple security and fault tolerance approaches have been studied and used in safety-critical CPS. One of the popular approaches for CPS safety is the Simplex architecture, which has also been used recently to strengthen the security of the CPS. The simplex architecture supports the integration of safe controllers for dependable systems, and when combined with periodic restarts, the architecture can reset the CPS into a safe state after each restart. However, these restart-based systems do not protect the system against attacks that persist beyond a restart. Such attacks can be mitigated using secure boot, which is a widely used approach for securing general computing systems but is not used in real-time systems due to the overhead of the boot process. This paper presents an analytical framework and derives feasibility conditions to enable secure reboots in real-time applications. The schedulability conditions presented can be used to design and integrate secure reboot into Simplex-based CPS. Our analysis shows that secure boot adds a deterministic and low-performance overhead, which can be as low as 0.08\%.},
	urldate = {2023-02-13},
	booktitle = {Proceedings of the 4th {Workshop} on {CPS} \& {IoT} {Security} and {Privacy}},
	publisher = {Association for Computing Machinery},
	author = {Banerjee, Vijay and Hounsinou, Sena and Olufowobi, Habeeb and Hasan, Monowar and Bloom, Gedare},
	month = nov,
	year = {2022},
	keywords = {real-time systems, cyber-physical systems, secure boot},
	pages = {27--33},
}

@article{agbaje_survey_2022,
	title = {Survey of {Interoperability} {Challenges} in the {Internet} of {Vehicles}},
	volume = {23},
	issn = {1558-0016},
	doi = {10.1109/TITS.2022.3194413},
	abstract = {The Internet of Vehicles (IoV) is an active area for innovation and an essential tool in achieving smart cities through the integration of vehicles with the Internet of Things (IoT). IoV is a distributed network that aids in handling the data generated by vehicular sensors and vehicle-to-everything communication (V2X), thus enabling novel applications such as autonomous driving and platooning while increasing safety and energy efficiency. In IoV, the sensors and the interdependent devices relay critical information for the efficient implementation of real-time applications in the ecosystem. Despite all these advancements, a vital challenge is establishing smooth communication among interconnected devices, concretely, interoperability in the IoVâ€”a deceptively simple notion that is not yet fully addressed to achieve a fully integrated ecosystem. This is mainly because the networked domains, such as home, grid, and health care, are developed in silos, operating independently with diverse processes and protocols. Hence, seamless exchange of information is yet to be achieved across the ecosystem, hindering the maximization of the full promise of IoV. In this paper, we provide an in-depth analysis of the present state of interoperability and comprehensively survey the challenges in IoV. We present a taxonomy of interoperability approaches, review solutions that prior work have proposed, and provide insights on how to address the current challenges. Finally, we identify open problems that persist and future directions for research.},
	number = {12},
	journal = {IEEE Transactions on Intelligent Transportation Systems},
	author = {Agbaje, Paul and Anjum, Afia and Mitra, Arkajyoti and Oseghale, Emmanuel and Bloom, Gedare and Olufowobi, Habeeb},
	month = dec,
	year = {2022},
	note = {Conference Name: IEEE Transactions on Intelligent Transportation Systems},
	keywords = {Semantics, Vehicle dynamics, intelligent transportation system, Real-time systems, Standards, smart city, Ecosystems, Internet of Vehicles, interoperability, Interoperability},
	pages = {22838--22861},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/VD4EVBP6/9852810.html:text/html},
}

@article{lawrence_cupid_2022,
	title = {{CUPID}: {A} labeled dataset with {Pentesting} for evaluation of network intrusion detection},
	volume = {129},
	issn = {1383-7621},
	shorttitle = {{CUPID}},
	url = {https://www.sciencedirect.com/science/article/pii/S1383762122001515},
	doi = {10.1016/j.sysarc.2022.102621},
	abstract = {Reproducibility of network intrusion detection research necessitates widely available datasets that represent real-world scenarios. One of the key omissions of existing datasets used in empirical evaluations of network intrusions is the lack of human-generated traffic with accurate labels to distinguish benign and malicious behavior. Using an emulated network environment with a vulnerable web application, we collected baseline traffic, human-generated normal user traffic, automated attacks, and the attacks of ten human penetration testers of varying abilities. We preprocessed this collected data to produce a new dataset named the Colorado University Pentesting Intrusion Dataset (CUPID). The attacks span from reconnaissance activities to delivery of an exploit payload. To our knowledge, this is the first collection that provides labeled, Institutional Review Board-approved, benign and attacker data that is publicly available. The CUPID dataset can be used to train and test the limits of classification-based machine learning algorithms used for network intrusion detection systems.},
	language = {en},
	urldate = {2023-02-13},
	journal = {Journal of Systems Architecture},
	author = {Lawrence, Heather and Ezeobi, Uchenna and Tauil, Orly and Nosal, Jacob and Redwood, Owen and Zhuang, Yanyan and Bloom, Gedare},
	month = aug,
	year = {2022},
	keywords = {Network intrusion detection, Feature selection},
	pages = {102621},
	file = {ScienceDirect Snapshot:/home/gedare/Zotero/storage/IVGGTVEJ/S1383762122001515.html:text/html},
}

@inproceedings{duby_evaluating_2022,
	title = {Evaluating {Feature} {Robustness} for {Windows} {Malware} {Family} {Classification}},
	doi = {10.1109/ICCCN54977.2022.9868914},
	abstract = {Machine learning approaches to classify malware by family save analysts valuable time during incident response. A key challenge for these approaches is selecting features that are robust against concept drift, which describes the change in malware over time. In this paper, we evaluate a dynamic feature set based on Windows handles (e.g., files, registry keys) for malware family classification. Specifically, we examine the features' vulnerabilities and evaluate their robustness against concept drift. We curated a novel dataset that simulates the manipulations that attackers may invoke on malware samples. We demonstrate improved robustness to concept drift over traditional API call-based features by training machine learning classifiers on malware collected in the wild, and testing the classifiers against samples that underwent manipulations. Further, we investigate time decay due to concept drift using temporally consistent evaluations that do not assume access to newer information. The evaluation shows that our features are robust against malware obfuscation. Furthermore, we empirically demonstrate how malware labeling conventions (malware type or family) can affect results, and make recommendations for dataset construction.},
	booktitle = {2022 {International} {Conference} on {Computer} {Communications} and {Networks} ({ICCCN})},
	author = {Duby, Adam and Taylor, Teryl and Bloom, Gedare and Zhuang, Yanyan},
	month = jul,
	year = {2022},
	note = {ISSN: 2637-9430},
	keywords = {Malware, Robustness, Training, Time factors, forensics, Machine learning, Malware analysis, malware classification, Labeling, Windows},
	pages = {1--10},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/JQY5IKUM/9868914.html:text/html},
}

@inproceedings{seaton_poster_2022,
	address = {New York, NY, USA},
	series = {{SACMAT} '22},
	title = {Poster: {Toward} {Zero}-{Trust} {Path}-{Aware} {Access} {Control}},
	isbn = {978-1-4503-9357-7},
	shorttitle = {Poster},
	url = {https://doi.org/10.1145/3532105.3535036},
	doi = {10.1145/3532105.3535036},
	abstract = {In this poster, we introduce path-aware risk scores for access control (PARSAC), a novel context-sensitive technique to enrich access requests with risk scoring of the path taken by those requests between the authenticated user and the resources they access. These path-aware risk scores enable another layer of security for traditional access control systems that addresses the need for fine-grained monitoring and enforcement within a zero-trust architecture. We define rules for general functions that can be used to determine risk and instantiate a specific approach to calculate path risk scores. We evaluate our approach with realistic network graphs; PARSAC finds more paths with lower risk when compared with traditional routing algorithms that select the shortest path.},
	urldate = {2023-02-13},
	booktitle = {Proceedings of the 27th {ACM} on {Symposium} on {Access} {Control} {Models} and {Technologies}},
	publisher = {Association for Computing Machinery},
	author = {Seaton, Joshua H. and Hounsinou, Sena and Wood, Timothy and Xu, Shouhuai and Brown, Philip N. and Bloom, Gedare},
	month = jun,
	year = {2022},
	keywords = {access control, path-aware networking, zero-trust},
	pages = {267--269},
}

@inproceedings{agbaje_framework_2022,
	title = {A {Framework} for {Consistent} and {Repeatable} {Controller} {Area} {Network} {IDS} {Evaluation}},
	booktitle = {Workshop on {Automotive} and {Autonomous} {Vehicle} {Security}},
	publisher = {Internet Society},
	author = {Agbaje, Paul and Anjum, Afia and Mitra, Arkajyoti and Bloom, Gedare and Olufowobi, Habeeb},
	month = apr,
	year = {2022},
	keywords = {automotive security},
}

@article{agbaje_weeping_2024,
	title = {From {Weeping} to {Wailing}: {A} {Transitive} {Stealthy} {Bus}-{Off} {Attack}},
	issn = {1558-0016},
	shorttitle = {From {Weeping} to {Wailing}},
	url = {https://ieeexplore.ieee.org/abstract/document/10480916},
	doi = {10.1109/TITS.2024.3377179},
	abstract = {The integration of the Internet of Things (IoT) devices and solutions into passenger vehicles has transformed cars into a complex system with intelligence and a platform for extending information technology possibilities. These devices communicate through in-vehicle networks that use the controller area network (CAN) as a de facto standard for the safety-critical functionality of the vehicles. One creative exploit against CAN is the bus-off attack, which uses the fault tolerance capabilities of the CAN bus to coerce a victim electronic control unit (ECU) into the bus-off state from which it is not allowed to access the bus. As a result, the victim ECU is unable to send or receive messages. The WeepingCAN attack is a stealthy variation of the bus-off attack that reduces its observability and therefore the effectiveness of detection-based mitigation. In this paper, we introduce three software-based improvements that greatly increase both the efficiency and effectiveness of the WeepingCAN attack. First, we introduce a novel zero-phase approach for synchronizing the attack. Second, we discover an alternative approach to disable retransmissions, which is a key capability of WeepingCAN, that allows the attack to be conducted from more ECUs than before. Third, we identify a transitive attack strategy that enables an attacker to target many more ECUs than originally possible. We evaluate our improvements experimentally using a CAN benchmark and find that the zero-phase synchronization improves the attack success rate from 75\% to over 90\% and the transitive attack strategy enables all the ECUs in the benchmark to be attacked.},
	urldate = {2024-05-16},
	journal = {IEEE Transactions on Intelligent Transportation Systems},
	author = {Agbaje, Paul and Olufowobi, Habeeb and Hounsinou, Sena and Bloom, Gedare},
	year = {2024},
	note = {Conference Name: IEEE Transactions on Intelligent Transportation Systems},
	keywords = {Security, Controller area network, Software, Standards, Synchronization, Feature extraction, bus-off, Intelligent transportation systems, Threat modeling, WeepingCAN},
	pages = {1--15},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/95XEX7JD/10480916.html:text/html},
}

@inproceedings{mofidi_l-ids_2024,
	title = {L-{IDS}: {A} {Multi}-{Layered} {Approach} to {Ransomware} {Detection} in {IoT}},
	shorttitle = {L-{IDS}},
	url = {https://ieeexplore.ieee.org/abstract/document/10427870},
	doi = {10.1109/CCWC60891.2024.10427870},
	abstract = {Ransomware is increasingly targeting Internet of Things (IoT) devices, and the resource constraints of these devices make detecting and mitigating such attacks a significant challenge. Unlike traditional ransomware attacks, ransomware in IoT-based attacks aims to affect functionality rather than the availability of data, thus defeating traditional detection methods. To address this issue, this article introduces a lightweight intrusion detection system, L-IDS. It is designed based on the principle of defense in depth and combines multilayer controls, hardware-enhanced TEE such as TrustZone, with machine learning (ML) algorithms. L-IDS can effectively detect and mitigate ransomware attacks inside IoT systems with low resources compared to traditional security scanning methods. By integrating TEE, L-IDS will enhance the security and protection of IoT devices, while ML algorithms will help detect ransomware attacks more efficiently and accurately. Overall, the proposed approach provides a promising solution for protecting IoT systems against ransomware attacks, especially for resource-constrained devices.},
	urldate = {2024-05-16},
	booktitle = {2024 {IEEE} 14th {Annual} {Computing} and {Communication} {Workshop} and {Conference} ({CCWC})},
	author = {Mofidi, Farhad and Hounsinou, Sena G and Bloom, Gedare},
	month = jan,
	year = {2024},
	keywords = {Intrusion detection, Monitoring, Internet of Things, Security, Machine learning algorithms, Intrusion Detection System, Trusted Execution Environment, Machine Learning, Ransomware, Hardware-assisted security, IoT Ransomware, Nonhomogeneous media},
	pages = {0387--0396},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/UZHJYB8I/10427870.html:text/html},
}

@inproceedings{knapp_should_2024,
	title = {Should {Smart} {Homes} {Be} {Afraid} of {Evil} {Maids}? : {Identifying} {Vulnerabilities} in {IoT} {Device} {Firmware}},
	shorttitle = {Should {Smart} {Homes} {Be} {Afraid} of {Evil} {Maids}?},
	url = {https://ieeexplore.ieee.org/abstract/document/10427780},
	doi = {10.1109/CCWC60891.2024.10427780},
	abstract = {The Internet of Things (IoT) revolution has transformed everyday consumer objects into interconnected, intelligent devices. Due to historically weak security designs, these devices are susceptible to compromises with far-reaching consequences. This paper aims to evaluate the current state of IoT device firmware security and assess the effectiveness of existing methods in safeguarding sensitive data. We conducted a manual analysis of 16 IoT devices, revealing a range of firmware management techniques, each varying in their effectiveness against an evil maid attack scenario. Out of the 16 devices, only 2 showed evidence of encrypting data at rest, despite 10 having crypto-enabled hardware. Additionally, 9 out of 16 devices possessed secure boot-enabled hardware, but 4 of them did not properly utilize or implement secure boot. Consequently, 13 devices were identified as vulnerable to sensitive data compromise, and 11 were at risk of firmware modification attacks. To address these critical security gaps, this study proposes a method for analyzing data-at-rest encryption and secure boot status in IoT devices. In this paper we shed light on the prevailing security shortcomings and provide practical analysis techniques to foster improved IoT device security and user data protection.},
	urldate = {2024-05-16},
	booktitle = {2024 {IEEE} 14th {Annual} {Computing} and {Communication} {Workshop} and {Conference} ({CCWC})},
	author = {Knapp, Austen and Wamuo, Emmanuel and Rahat, Minhajul Alam and Torres-Arias, Santiago and Bloom, Gedare and Zhuang, Yanyan},
	month = jan,
	year = {2024},
	keywords = {Data Encryption, Hardware, Microprogramming, Encryption, Internet of Things, Smart homes, Performance evaluation, Secure Boot, Data protection, Firmware Analysis},
	pages = {0467--0473},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/9VC7V59X/10427780.html:text/html},
}

@inproceedings{hendrix_platoon_2024,
	title = {Platoon {Vulnerability} due to {Network} {Topology} and {Targeted} {Vehicle}},
	url = {https://ieeexplore.ieee.org/abstract/document/10454750},
	doi = {10.1109/CCNC51664.2024.10454750},
	abstract = {Vehicle platooning is a key application for intelligent transportation systems that brings the joint problem of maintaining safety and security as prioritized requirements. The complex and dynamic electromagnetic environment coupled with sophisticated adversarial threats motivate better understanding of platoon control resilience from traditional faults, disturbances, and attack injects. An open problem for this understanding is the impact that information flow (communication network) topologies have on the attack and defense strategies for vehicular platoons. As the topology changes, vulnerability amongst platoon members and their individual contributions to the overall platoon security also change. This paper evaluates the impact of member-specific targeting informed by topology and demonstrates that targeting one member over another can be advantageous to the attacker. Furthermore, we present a taxonomy to identify topologies by key characteristics as an option for an industry standard.},
	urldate = {2024-05-16},
	booktitle = {2024 {IEEE} 21st {Consumer} {Communications} \& {Networking} {Conference} ({CCNC})},
	author = {Hendrix, Constance and Bloom, Gedare},
	month = jan,
	year = {2024},
	note = {ISSN: 2331-9860},
	keywords = {security, Taxonomy, Network topology, Safety, Vehicle dynamics, Security, Industries, autonomous vehicle, platoon, topology, Topology},
	pages = {771--776},
	file = {IEEE Xplore Abstract Record:/home/gedare/Zotero/storage/APP5UW6E/10454750.html:text/html},
}

@inproceedings{rahat_cimalir_2024,
	title = {Cimalir: {Cross}-{Platform} {IoT} {Malware} {Clustering} using {Intermediate} {Representation}},
	shorttitle = {Cimalir},
	url = {https://ieeexplore.ieee.org/abstract/document/10427663},
	doi = {10.1109/CCWC60891.2024.10427663},
	abstract = {The widespread adoption of Internet-of-Things (IoT) devices has significantly increased the interconnectivity of everyday activities. Malware on IoT devices directly jeopardize the security and privacy of their users, and device heterogeneity poses significant challenges in malware analysis. This paper presents Cimalir, which uses an automated approach for clustering malware that leverages an intermediate representation (IR) of low-level assembly code across different architectures. Cimalir uses a staged analysis approach that first filters binary images using set-based similarity of function attributes before applying call graph analysis. Additionally, Cimalir employs a string based technique to distinguish different malware families that exhibit a substantial level of shared code use. Cimalir has a low runtime complexity as evidenced by a linear relationship between execution time and the number of functions in the binary images under analysis. Experimental results show that Cimalir yields improved clustering results compared to the state-of-the-art binary analysis tool, BinDiff, when applied to malware binaries compiled for different instruction sets. Cimalir results in a DBCV score of 0.75 and Silhouette Score of 0.812 when clustering malware families from the CUBE-MALIOT-2021 dataset. In comparison, BinDiff achieves scores of 0.54 and 0.616, respectively. This indicates Cimalirâ€™s superior performance compared to BinDiff.},
	urldate = {2024-05-16},
	booktitle = {2024 {IEEE} 14th {Annual} {Computing} and {Communication} {Workshop} and {Conference} ({CCWC})},
	author = {Rahat, Minhajul Alam and Banerjee, Vijay and Bloom, Gedare and Zhuang, Yanyan},
	month = jan,
	year = {2024},
	keywords = {Malware, Runtime, Internet of Things, Security, Privacy, IoT, malware, Instruction sets, Codes, intermediate representation},
	pages = {0460--0466},
}
