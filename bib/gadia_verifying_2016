
@inproceedings{gadia_verifying_2016,
	title = {Verifying {Nested} {Lock} {Priority} {Inheritance} in {RTEMS} with {Java} {Pathfinder}},
	url = {https://link.springer.com/chapter/10.1007/978-3-319-47846-3_26},
	abstract = {Scheduling and synchronization algorithms for uniprocessor real-time systems benefit from the rich theory of schedulability analysis, and yet translating these algorithms to practical implementations can be challenging. This paper presents a Java model of the priority inheritance protocol for mutual exclusion, as implemented in the RTEMS open-source real-time operating system. We verified this model using Java Pathfinder to detect potential data races, deadlocks, and priority inversions. JPF detected a known bug in the RTEMS implementation, which we modified along with the Java model. Verification of the modified model showed the absence of data races, deadlocks, and established nine protocol-specific correctness properties.},
	language = {en},
	urldate = {2017-02-23},
	booktitle = {Formal {Methods} and {Software} {Engineering}},
	publisher = {Springer, Cham},
	author = {Gadia, Saurabh and Artho, Cyrille and Bloom, Gedare},
	month = nov,
	year = {2016},
	note = {DOI: 10.1007/978-3-319-47846-3\_26},
	pages = {417--432},
	file = {Snapshot:/home/gedare/.mozilla/firefox/9hw43utw.default/zotero/storage/HRBHQQZK/978-3-319-47846-3_26.html:text/html}
}