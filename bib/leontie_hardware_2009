
@inproceedings{leontie_hardware_2009,
	address = {Los Alamitos, {CA,} {USA}},
	title = {Hardware Containers for Software Components: A Trusted Platform for {COTS-Based} Systems},
	volume = {2},
	isbn = {978-0-7695-3823-5},
	shorttitle = {Hardware Containers for Software Components},
	doi = {http://doi.ieeecomputersociety.org/10.1109/CSE.2009.56},
	abstract = {Much of modern software development consists of assembling together existing software components and writing the glue code that integrates them into a unified application. The term {COTS-Based} System {(CBS)} is often used to describe such applications, for which the components assembled are understood to be {Commercial-Off-The-Shelf} {(COTS)} components written by a multitude of independent third parties. The manner of assembly in {CBS} includes full-source components that are integrated at compile-time, pure-binary libraries incorporated at load-time, and plugins that are loaded into the application at execution time by the {user.Because} components have access to system resources, applications may crash due to faulty components or may be compromised by malicious components. In this paper, we ask the question: can hardware support the development and deployment of {CBS} by providing applications with a trusted platform for managing components and their {interactions?We} present an architecture that places each {CBS} component in a hardware-enforced container. The hardware then detects improper usage of system resources (unauthorized memory accesses or denial-of-service) and enables applications to undertake a hardware-supervised recovery procedure. Furthermore, the hardware also maintains a violation record to enable developers to recreate the violation for the purpose of debugging and further development. Taken together, the purpose of the architecture we propose is to enable executing untrusted {CBS} code on trusted hardware.},
	booktitle = {Computational Science and Engineering, {IEEE} International Conference on},
	publisher = {{IEEE} Computer Society},
	author = {Eugen Leontie and Gedare Bloom and Bhagirath Narahari and Rahul Simha and Joseph Zambreno},
	year = {2009},
	keywords = {architectural support for security, fine-grained protection, isolation, memory protection, software security},
	pages = {830--836},
	annote = {Complete {PDF} document was either not available or accessible. Please make sure you're logged in to the digital library to retrieve the complete {PDF} document.}
}